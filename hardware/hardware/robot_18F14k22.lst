;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 7/2/2018 11:05:02 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF003EFDC  	GOTO        1976
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF003EF91  	GOTO        1826
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xF004EF5F  	GOTO        2238
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x001C	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x001E	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x0020	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0022	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0024	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x0026	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x002A	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x002E	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x0030	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x0032	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x0036	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x003A	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x003C	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x003E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x0040	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x0042	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x0044	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x0046	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x0048	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x004A	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x004C	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x004E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x0050	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x0052	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x0054	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x0056	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x0058	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x005A	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x005E	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x0062	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x0066	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x006A	0x0012      	RETURN      0
; end of _Mul_16X16_U
_PWM1_Set_Duty:
;__Lib_PWM_c5.c,11 :: 		
;__Lib_PWM_c5.c,15 :: 		
0x006C	0x50CB      	MOVF        PR2, 0 
0x006E	0x0F01      	ADDLW       1
0x0070	0x6E00      	MOVWF       R0 
0x0072	0x6A01      	CLRF        R1 
0x0074	0x0E00      	MOVLW       0
0x0076	0x2201      	ADDWFC      R1, 1 
0x0078	0xF004C05E  	MOVFF       FARG_PWM1_Set_Duty_new_duty, R4
0x007C	0x0E00      	MOVLW       0
0x007E	0x6E05      	MOVWF       R5 
0x0080	0xDFCD      	RCALL       _Mul_16X16_U
0x0082	0x0E06      	MOVLW       6
0x0084	0x6E02      	MOVWF       R2 
0x0086	0xF004C000  	MOVFF       R0, R4
0x008A	0xF005C001  	MOVFF       R1, R5
0x008E	0x5002      	MOVF        R2, 0 
L__PWM1_Set_Duty2:
0x0090	0xE005      	BZ          L__PWM1_Set_Duty3
0x0092	0x3205      	RRCF        R5, 1 
0x0094	0x3204      	RRCF        R4, 1 
0x0096	0x9E05      	BCF         R5, 7 
0x0098	0x0FFF      	ADDLW       255
0x009A	0xD7FA      	BRA         L__PWM1_Set_Duty2
L__PWM1_Set_Duty3:
;__Lib_PWM_c5.c,16 :: 		
0x009C	0x0E04      	MOVLW       4
0x009E	0x6E01      	MOVWF       R1 
0x00A0	0xF000C004  	MOVFF       R4, R0
0x00A4	0x5001      	MOVF        R1, 0 
L__PWM1_Set_Duty4:
0x00A6	0xE004      	BZ          L__PWM1_Set_Duty5
0x00A8	0x3600      	RLCF        R0, 1 
0x00AA	0x9000      	BCF         R0, 0 
0x00AC	0x0FFF      	ADDLW       255
0x00AE	0xD7FB      	BRA         L__PWM1_Set_Duty4
L__PWM1_Set_Duty5:
0x00B0	0x0E30      	MOVLW       48
0x00B2	0x1400      	ANDWF       R0, 0 
0x00B4	0x6E03      	MOVWF       R3 
;__Lib_PWM_c5.c,17 :: 		
0x00B6	0xF000C004  	MOVFF       R4, R0
0x00BA	0xF001C005  	MOVFF       R5, R1
0x00BE	0x3201      	RRCF        R1, 1 
0x00C0	0x3200      	RRCF        R0, 1 
0x00C2	0x9E01      	BCF         R1, 7 
0x00C4	0x3201      	RRCF        R1, 1 
0x00C6	0x3200      	RRCF        R0, 1 
0x00C8	0x9E01      	BCF         R1, 7 
0x00CA	0xFFBEC000  	MOVFF       R0, CCPR1L
;__Lib_PWM_c5.c,18 :: 		
0x00CE	0x0E0F      	MOVLW       15
0x00D0	0x16BD      	ANDWF       CCP1CON, 1 
;__Lib_PWM_c5.c,19 :: 		
0x00D2	0x5003      	MOVF        R3, 0 
0x00D4	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c5.c,20 :: 		
L_end_PWM1_Set_Duty:
0x00D6	0x0012      	RETURN      0
; end of _PWM1_Set_Duty
_set_motor_cmd_stop:
;robot_18F14k22_test.c,188 :: 		void set_motor_cmd_stop(){
;robot_18F14k22_test.c,189 :: 		if(motor_current_speed != 127){
0x00D8	0x503A      	MOVF        _motor_current_speed, 0 
0x00DA	0x0A7F      	XORLW       127
0x00DC	0xE006      	BZ          L_set_motor_cmd_stop35
;robot_18F14k22_test.c,191 :: 		PWM1_Set_Duty(127);
0x00DE	0x0E7F      	MOVLW       127
0x00E0	0x6E5E      	MOVWF       FARG_PWM1_Set_Duty_new_duty 
0x00E2	0xDFC4      	RCALL       _PWM1_Set_Duty
;robot_18F14k22_test.c,192 :: 		motor_current_speed = 127;
0x00E4	0x0E7F      	MOVLW       127
0x00E6	0x6E3A      	MOVWF       _motor_current_speed 
;robot_18F14k22_test.c,193 :: 		RC6_bit = 1;
0x00E8	0x8C82      	BSF         RC6_bit, BitPos(RC6_bit+0) 
;robot_18F14k22_test.c,194 :: 		}
L_set_motor_cmd_stop35:
;robot_18F14k22_test.c,195 :: 		}
L_end_set_motor_cmd_stop:
0x00EA	0x0012      	RETURN      0
; end of _set_motor_cmd_stop
_set_motor_cmd:
;robot_18F14k22_test.c,201 :: 		void set_motor_cmd(unsigned short speed){
;robot_18F14k22_test.c,202 :: 		if(motor_on == 0 || (butee_out == 1 && speed >= 127) || (butee_in == 1 && speed <= 127)){
0x00EC	0x5039      	MOVF        _motor_on, 0 
0x00EE	0x0A00      	XORLW       0
0x00F0	0xE00F      	BZ          L__set_motor_cmd110
0x00F2	0x5025      	MOVF        _butee_out, 0 
0x00F4	0x0A01      	XORLW       1
0x00F6	0xE104      	BNZ         L__set_motor_cmd112
0x00F8	0x0E7F      	MOVLW       127
0x00FA	0x5C5D      	SUBWF       FARG_set_motor_cmd_speed, 0 
0x00FC	0xE301      	BNC         L__set_motor_cmd112
0x00FE	0xD008      	BRA         L__set_motor_cmd110
L__set_motor_cmd112:
0x0100	0x5024      	MOVF        _butee_in, 0 
0x0102	0x0A01      	XORLW       1
0x0104	0xE104      	BNZ         L__set_motor_cmd111
0x0106	0x505D      	MOVF        FARG_set_motor_cmd_speed, 0 
0x0108	0x087F      	SUBLW       127
0x010A	0xE301      	BNC         L__set_motor_cmd111
0x010C	0xD001      	BRA         L__set_motor_cmd110
L__set_motor_cmd111:
0x010E	0xD019      	BRA         L_set_motor_cmd42
L__set_motor_cmd110:
;robot_18F14k22_test.c,203 :: 		set_motor_cmd_stop();
0x0110	0xDFE3      	RCALL       _set_motor_cmd_stop
;robot_18F14k22_test.c,204 :: 		if(position_reached_enable == 1){
0x0112	0x5034      	MOVF        _position_reached_enable, 0 
0x0114	0x0A01      	XORLW       1
0x0116	0xE114      	BNZ         L_set_motor_cmd43
;robot_18F14k22_test.c,205 :: 		if(position_reached_cpt>position_reached_max_value){
0x0118	0x5032      	MOVF        _position_reached_cpt+3, 0 
0x011A	0x5C2E      	SUBWF       _position_reached_max_value+3, 0 
0x011C	0xE108      	BNZ         L__set_motor_cmd149
0x011E	0x5031      	MOVF        _position_reached_cpt+2, 0 
0x0120	0x5C2D      	SUBWF       _position_reached_max_value+2, 0 
0x0122	0xE105      	BNZ         L__set_motor_cmd149
0x0124	0x5030      	MOVF        _position_reached_cpt+1, 0 
0x0126	0x5C2C      	SUBWF       _position_reached_max_value+1, 0 
0x0128	0xE102      	BNZ         L__set_motor_cmd149
0x012A	0x502F      	MOVF        _position_reached_cpt, 0 
0x012C	0x5C2B      	SUBWF       _position_reached_max_value, 0 
L__set_motor_cmd149:
0x012E	0xE202      	BC          L_set_motor_cmd44
;robot_18F14k22_test.c,206 :: 		RC6_bit = 0;
0x0130	0x9C82      	BCF         RC6_bit, BitPos(RC6_bit+0) 
;robot_18F14k22_test.c,207 :: 		}
0x0132	0xD006      	BRA         L_set_motor_cmd45
L_set_motor_cmd44:
;robot_18F14k22_test.c,209 :: 		position_reached_cpt++;
0x0134	0x0E01      	MOVLW       1
0x0136	0x262F      	ADDWF       _position_reached_cpt, 1 
0x0138	0x0E00      	MOVLW       0
0x013A	0x2230      	ADDWFC      _position_reached_cpt+1, 1 
0x013C	0x2231      	ADDWFC      _position_reached_cpt+2, 1 
0x013E	0x2232      	ADDWFC      _position_reached_cpt+3, 1 
L_set_motor_cmd45:
;robot_18F14k22_test.c,210 :: 		}
L_set_motor_cmd43:
;robot_18F14k22_test.c,211 :: 		}
0x0140	0xD00D      	BRA         L_set_motor_cmd46
L_set_motor_cmd42:
;robot_18F14k22_test.c,212 :: 		else if(motor_current_speed != speed){
0x0142	0x503A      	MOVF        _motor_current_speed, 0 
0x0144	0x185D      	XORWF       FARG_set_motor_cmd_speed, 0 
0x0146	0xE00A      	BZ          L_set_motor_cmd47
;robot_18F14k22_test.c,213 :: 		position_reached_cpt = 0;
0x0148	0x6A2F      	CLRF        _position_reached_cpt 
0x014A	0x6A30      	CLRF        _position_reached_cpt+1 
0x014C	0x6A31      	CLRF        _position_reached_cpt+2 
0x014E	0x6A32      	CLRF        _position_reached_cpt+3 
;robot_18F14k22_test.c,214 :: 		motor_current_speed = speed;
0x0150	0xF03AC05D  	MOVFF       FARG_set_motor_cmd_speed, _motor_current_speed
;robot_18F14k22_test.c,215 :: 		PWM1_Set_Duty(speed);
0x0154	0xF05EC05D  	MOVFF       FARG_set_motor_cmd_speed, FARG_PWM1_Set_Duty_new_duty
0x0158	0xDF89      	RCALL       _PWM1_Set_Duty
;robot_18F14k22_test.c,216 :: 		RC6_bit = 1;  //Enable L6203
0x015A	0x8C82      	BSF         RC6_bit, BitPos(RC6_bit+0) 
;robot_18F14k22_test.c,217 :: 		}
L_set_motor_cmd47:
L_set_motor_cmd46:
;robot_18F14k22_test.c,223 :: 		}
L_end_set_motor_cmd:
0x015C	0x0012      	RETURN      0
; end of _set_motor_cmd
_read_optical_fork:
;robot_18F14k22_test.c,244 :: 		void read_optical_fork(){
;robot_18F14k22_test.c,245 :: 		unsigned short new_state = SB<<1 | SA;  //  ou logique de RA3 et RA2
0x015E	0x6A01      	CLRF        R1 
0x0160	0xB880      	BTFSC       RA4_bit, BitPos(RA4_bit+0) 
0x0162	0x2A01      	INCF        R1, 1 
0x0164	0xF002C001  	MOVFF       R1, R2
0x0168	0x0E00      	MOVLW       0
0x016A	0x6E03      	MOVWF       R3 
0x016C	0x3602      	RLCF        R2, 1 
0x016E	0x9002      	BCF         R2, 0 
0x0170	0x3603      	RLCF        R3, 1 
0x0172	0x6A00      	CLRF        R0 
0x0174	0xB480      	BTFSC       RA2_bit, BitPos(RA2_bit+0) 
0x0176	0x2A00      	INCF        R0, 1 
0x0178	0x0E00      	MOVLW       0
0x017A	0x6E01      	MOVWF       R1 
0x017C	0x5002      	MOVF        R2, 0 
0x017E	0x1200      	IORWF       R0, 1 
0x0180	0x5003      	MOVF        R3, 0 
0x0182	0x1201      	IORWF       R1, 1 
0x0184	0xF004C000  	MOVFF       R0, R4
;robot_18F14k22_test.c,247 :: 		switch(optical_state){
0x0188	0xD039      	BRA         L_read_optical_fork48
;robot_18F14k22_test.c,248 :: 		case 0x00:
L_read_optical_fork50:
;robot_18F14k22_test.c,249 :: 		if(new_state == 0x1)
0x018A	0x5004      	MOVF        R4, 0 
0x018C	0x0A01      	XORLW       1
0x018E	0xE105      	BNZ         L_read_optical_fork51
;robot_18F14k22_test.c,250 :: 		nb_pulse--;
0x0190	0x0E01      	MOVLW       1
0x0192	0x5E37      	SUBWF       _nb_pulse, 1 
0x0194	0x0E00      	MOVLW       0
0x0196	0x5A38      	SUBWFB      _nb_pulse+1, 1 
0x0198	0xD005      	BRA         L_read_optical_fork52
L_read_optical_fork51:
;robot_18F14k22_test.c,251 :: 		else if(new_state == 0x2)
0x019A	0x5004      	MOVF        R4, 0 
0x019C	0x0A02      	XORLW       2
0x019E	0xE102      	BNZ         L_read_optical_fork53
;robot_18F14k22_test.c,252 :: 		nb_pulse++;
0x01A0	0x4A37      	INFSNZ      _nb_pulse, 1 
0x01A2	0x2A38      	INCF        _nb_pulse+1, 1 
L_read_optical_fork53:
L_read_optical_fork52:
;robot_18F14k22_test.c,253 :: 		break;
0x01A4	0xD038      	BRA         L_read_optical_fork49
;robot_18F14k22_test.c,254 :: 		case 0x01:
L_read_optical_fork54:
;robot_18F14k22_test.c,255 :: 		if(new_state == 0x3)
0x01A6	0x5004      	MOVF        R4, 0 
0x01A8	0x0A03      	XORLW       3
0x01AA	0xE105      	BNZ         L_read_optical_fork55
;robot_18F14k22_test.c,256 :: 		nb_pulse--;
0x01AC	0x0E01      	MOVLW       1
0x01AE	0x5E37      	SUBWF       _nb_pulse, 1 
0x01B0	0x0E00      	MOVLW       0
0x01B2	0x5A38      	SUBWFB      _nb_pulse+1, 1 
0x01B4	0xD005      	BRA         L_read_optical_fork56
L_read_optical_fork55:
;robot_18F14k22_test.c,257 :: 		else if(new_state == 0x0)
0x01B6	0x5004      	MOVF        R4, 0 
0x01B8	0x0A00      	XORLW       0
0x01BA	0xE102      	BNZ         L_read_optical_fork57
;robot_18F14k22_test.c,258 :: 		nb_pulse++;
0x01BC	0x4A37      	INFSNZ      _nb_pulse, 1 
0x01BE	0x2A38      	INCF        _nb_pulse+1, 1 
L_read_optical_fork57:
L_read_optical_fork56:
;robot_18F14k22_test.c,259 :: 		break;
0x01C0	0xD02A      	BRA         L_read_optical_fork49
;robot_18F14k22_test.c,260 :: 		case 0x02:
L_read_optical_fork58:
;robot_18F14k22_test.c,261 :: 		if(new_state == 0x0)
0x01C2	0x5004      	MOVF        R4, 0 
0x01C4	0x0A00      	XORLW       0
0x01C6	0xE105      	BNZ         L_read_optical_fork59
;robot_18F14k22_test.c,262 :: 		nb_pulse--;
0x01C8	0x0E01      	MOVLW       1
0x01CA	0x5E37      	SUBWF       _nb_pulse, 1 
0x01CC	0x0E00      	MOVLW       0
0x01CE	0x5A38      	SUBWFB      _nb_pulse+1, 1 
0x01D0	0xD005      	BRA         L_read_optical_fork60
L_read_optical_fork59:
;robot_18F14k22_test.c,263 :: 		else if(new_state == 0x3)
0x01D2	0x5004      	MOVF        R4, 0 
0x01D4	0x0A03      	XORLW       3
0x01D6	0xE102      	BNZ         L_read_optical_fork61
;robot_18F14k22_test.c,264 :: 		nb_pulse++;
0x01D8	0x4A37      	INFSNZ      _nb_pulse, 1 
0x01DA	0x2A38      	INCF        _nb_pulse+1, 1 
L_read_optical_fork61:
L_read_optical_fork60:
;robot_18F14k22_test.c,265 :: 		break;
0x01DC	0xD01C      	BRA         L_read_optical_fork49
;robot_18F14k22_test.c,266 :: 		case 0x03:
L_read_optical_fork62:
;robot_18F14k22_test.c,267 :: 		if(new_state == 0x1)
0x01DE	0x5004      	MOVF        R4, 0 
0x01E0	0x0A01      	XORLW       1
0x01E2	0xE103      	BNZ         L_read_optical_fork63
;robot_18F14k22_test.c,268 :: 		nb_pulse++;
0x01E4	0x4A37      	INFSNZ      _nb_pulse, 1 
0x01E6	0x2A38      	INCF        _nb_pulse+1, 1 
0x01E8	0xD007      	BRA         L_read_optical_fork64
L_read_optical_fork63:
;robot_18F14k22_test.c,269 :: 		else if(new_state == 0x2)
0x01EA	0x5004      	MOVF        R4, 0 
0x01EC	0x0A02      	XORLW       2
0x01EE	0xE104      	BNZ         L_read_optical_fork65
;robot_18F14k22_test.c,270 :: 		nb_pulse--;
0x01F0	0x0E01      	MOVLW       1
0x01F2	0x5E37      	SUBWF       _nb_pulse, 1 
0x01F4	0x0E00      	MOVLW       0
0x01F6	0x5A38      	SUBWFB      _nb_pulse+1, 1 
L_read_optical_fork65:
L_read_optical_fork64:
;robot_18F14k22_test.c,271 :: 		break;
0x01F8	0xD00E      	BRA         L_read_optical_fork49
;robot_18F14k22_test.c,272 :: 		default:
L_read_optical_fork66:
;robot_18F14k22_test.c,273 :: 		break;
0x01FA	0xD00D      	BRA         L_read_optical_fork49
;robot_18F14k22_test.c,274 :: 		}
L_read_optical_fork48:
0x01FC	0x5040      	MOVF        _optical_state, 0 
0x01FE	0x0A00      	XORLW       0
0x0200	0xE0C4      	BZ          L_read_optical_fork50
0x0202	0x5040      	MOVF        _optical_state, 0 
0x0204	0x0A01      	XORLW       1
0x0206	0xE0CF      	BZ          L_read_optical_fork54
0x0208	0x5040      	MOVF        _optical_state, 0 
0x020A	0x0A02      	XORLW       2
0x020C	0xE0DA      	BZ          L_read_optical_fork58
0x020E	0x5040      	MOVF        _optical_state, 0 
0x0210	0x0A03      	XORLW       3
0x0212	0xE0E5      	BZ          L_read_optical_fork62
0x0214	0xD7F2      	BRA         L_read_optical_fork66
L_read_optical_fork49:
;robot_18F14k22_test.c,276 :: 		if (optical_state != new_state){
0x0216	0x5040      	MOVF        _optical_state, 0 
0x0218	0x1804      	XORWF       R4, 0 
0x021A	0xE00A      	BZ          L_read_optical_fork67
;robot_18F14k22_test.c,277 :: 		TXREG = nb_pulse >> 8;
0x021C	0xF000C038  	MOVFF       _nb_pulse+1, R0
0x0220	0x0E00      	MOVLW       0
0x0222	0xBE38      	BTFSC       _nb_pulse+1, 7 
0x0224	0x0EFF      	MOVLW       255
0x0226	0x6E01      	MOVWF       R1 
0x0228	0xFFADC000  	MOVFF       R0, TXREG
;robot_18F14k22_test.c,278 :: 		TXREG = nb_pulse;
0x022C	0xFFADC037  	MOVFF       _nb_pulse, TXREG
;robot_18F14k22_test.c,279 :: 		}
L_read_optical_fork67:
;robot_18F14k22_test.c,281 :: 		optical_state = new_state;  // store the current state value to optical_state value this value will be used in next call
0x0230	0xF040C004  	MOVFF       R4, _optical_state
;robot_18F14k22_test.c,282 :: 		}
L_end_read_optical_fork:
0x0234	0x0012      	RETURN      0
; end of _read_optical_fork
_set_motor_cmd_out:
;robot_18F14k22_test.c,229 :: 		void set_motor_cmd_out(unsigned short speed){
;robot_18F14k22_test.c,230 :: 		set_motor_cmd(127 + speed);
0x0236	0x5059      	MOVF        FARG_set_motor_cmd_out_speed, 0 
0x0238	0x0F7F      	ADDLW       127
0x023A	0x6E5D      	MOVWF       FARG_set_motor_cmd_speed 
0x023C	0xDF57      	RCALL       _set_motor_cmd
;robot_18F14k22_test.c,231 :: 		}
L_end_set_motor_cmd_out:
0x023E	0x0012      	RETURN      0
; end of _set_motor_cmd_out
_set_motor_cmd_in:
;robot_18F14k22_test.c,237 :: 		void set_motor_cmd_in(unsigned short speed){
;robot_18F14k22_test.c,238 :: 		set_motor_cmd(127 - speed);
0x0240	0x5059      	MOVF        FARG_set_motor_cmd_in_speed, 0 
0x0242	0x087F      	SUBLW       127
0x0244	0x6E5D      	MOVWF       FARG_set_motor_cmd_speed 
0x0246	0xDF52      	RCALL       _set_motor_cmd
;robot_18F14k22_test.c,239 :: 		}
L_end_set_motor_cmd_in:
0x0248	0x0012      	RETURN      0
; end of _set_motor_cmd_in
_i2c_write_data_to_buffer:
;robot_18F14k22_test.c,125 :: 		void i2c_write_data_to_buffer(unsigned short nb_tx_octet){
;robot_18F14k22_test.c,127 :: 		switch(rxbuffer_tab[0]+nb_tx_octet){
0x024A	0x505F      	MOVF        FARG_i2c_write_data_to_buffer_nb_tx_octet, 0 
0x024C	0x2445      	ADDWF       _rxbuffer_tab, 0 
0x024E	0x6E05      	MOVWF       R5 
0x0250	0x6A06      	CLRF        R6 
0x0252	0x0E00      	MOVLW       0
0x0254	0x2206      	ADDWFC      R6, 1 
0x0256	0xD06C      	BRA         L_i2c_write_data_to_buffer18
;robot_18F14k22_test.c,128 :: 		case 0x00:
L_i2c_write_data_to_buffer20:
;robot_18F14k22_test.c,129 :: 		SSPBUF = nb_pulse;
0x0258	0xFFC9C037  	MOVFF       _nb_pulse, SSPBUF
;robot_18F14k22_test.c,130 :: 		break;
0x025C	0xD0A6      	BRA         L_i2c_write_data_to_buffer19
;robot_18F14k22_test.c,131 :: 		case 0x01:
L_i2c_write_data_to_buffer21:
;robot_18F14k22_test.c,132 :: 		SSPBUF = (nb_pulse >> 8);
0x025E	0xF000C038  	MOVFF       _nb_pulse+1, R0
0x0262	0x0E00      	MOVLW       0
0x0264	0xBE38      	BTFSC       _nb_pulse+1, 7 
0x0266	0x0EFF      	MOVLW       255
0x0268	0x6E01      	MOVWF       R1 
0x026A	0xFFC9C000  	MOVFF       R0, SSPBUF
;robot_18F14k22_test.c,133 :: 		break;
0x026E	0xD09D      	BRA         L_i2c_write_data_to_buffer19
;robot_18F14k22_test.c,134 :: 		case 0x02:
L_i2c_write_data_to_buffer22:
;robot_18F14k22_test.c,135 :: 		SSPBUF = (butee_out & 0b1)
0x0270	0x0E01      	MOVLW       1
0x0272	0x1425      	ANDWF       _butee_out, 0 
0x0274	0x6E03      	MOVWF       R3 
;robot_18F14k22_test.c,136 :: 		| ((butee_in & 0b1)<<1)
0x0276	0x0E01      	MOVLW       1
0x0278	0x1424      	ANDWF       _butee_in, 0 
0x027A	0x6E02      	MOVWF       R2 
0x027C	0xF000C002  	MOVFF       R2, R0
0x0280	0x3600      	RLCF        R0, 1 
0x0282	0x9000      	BCF         R0, 0 
0x0284	0x5000      	MOVF        R0, 0 
0x0286	0x1003      	IORWF       R3, 0 
0x0288	0x6E04      	MOVWF       R4 
;robot_18F14k22_test.c,137 :: 		| ((state & 0b11) <<2)
0x028A	0x0E03      	MOVLW       3
0x028C	0x1433      	ANDWF       _state, 0 
0x028E	0x6E03      	MOVWF       R3 
0x0290	0xF000C003  	MOVFF       R3, R0
0x0294	0x0E00      	MOVLW       0
0x0296	0x6E01      	MOVWF       R1 
0x0298	0x3600      	RLCF        R0, 1 
0x029A	0x9000      	BCF         R0, 0 
0x029C	0x3601      	RLCF        R1, 1 
0x029E	0x3600      	RLCF        R0, 1 
0x02A0	0x9000      	BCF         R0, 0 
0x02A2	0x3601      	RLCF        R1, 1 
0x02A4	0x5000      	MOVF        R0, 0 
0x02A6	0x1204      	IORWF       R4, 1 
;robot_18F14k22_test.c,138 :: 		| ((motor_on & 0b1) << 4)
0x02A8	0x0E01      	MOVLW       1
0x02AA	0x1439      	ANDWF       _motor_on, 0 
0x02AC	0x6E03      	MOVWF       R3 
0x02AE	0x0E04      	MOVLW       4
0x02B0	0x6E02      	MOVWF       R2 
0x02B2	0xF000C003  	MOVFF       R3, R0
0x02B6	0x0E00      	MOVLW       0
0x02B8	0x6E01      	MOVWF       R1 
0x02BA	0x5002      	MOVF        R2, 0 
L__i2c_write_data_to_buffer132:
0x02BC	0xE005      	BZ          L__i2c_write_data_to_buffer133
0x02BE	0x3600      	RLCF        R0, 1 
0x02C0	0x9000      	BCF         R0, 0 
0x02C2	0x3601      	RLCF        R1, 1 
0x02C4	0x0FFF      	ADDLW       255
0x02C6	0xD7FA      	BRA         L__i2c_write_data_to_buffer132
L__i2c_write_data_to_buffer133:
0x02C8	0x5000      	MOVF        R0, 0 
0x02CA	0x1204      	IORWF       R4, 1 
;robot_18F14k22_test.c,139 :: 		| ((RC6_bit & 0b1) << 5);
0x02CC	0x6A00      	CLRF        R0 
0x02CE	0xBC82      	BTFSC       RC6_bit, BitPos(RC6_bit+0) 
0x02D0	0x2A00      	INCF        R0, 1 
0x02D2	0x0E01      	MOVLW       1
0x02D4	0x1400      	ANDWF       R0, 0 
0x02D6	0x6E03      	MOVWF       R3 
0x02D8	0x0E05      	MOVLW       5
0x02DA	0x6E02      	MOVWF       R2 
0x02DC	0xF000C003  	MOVFF       R3, R0
0x02E0	0x0E00      	MOVLW       0
0x02E2	0x6E01      	MOVWF       R1 
0x02E4	0x5002      	MOVF        R2, 0 
L__i2c_write_data_to_buffer134:
0x02E6	0xE005      	BZ          L__i2c_write_data_to_buffer135
0x02E8	0x3600      	RLCF        R0, 1 
0x02EA	0x9000      	BCF         R0, 0 
0x02EC	0x3601      	RLCF        R1, 1 
0x02EE	0x0FFF      	ADDLW       255
0x02F0	0xD7FA      	BRA         L__i2c_write_data_to_buffer134
L__i2c_write_data_to_buffer135:
0x02F2	0x5000      	MOVF        R0, 0 
0x02F4	0x1004      	IORWF       R4, 0 
0x02F6	0x6EC9      	MOVWF       SSPBUF 
;robot_18F14k22_test.c,140 :: 		break;
0x02F8	0xD058      	BRA         L_i2c_write_data_to_buffer19
;robot_18F14k22_test.c,141 :: 		case 0x03:
L_i2c_write_data_to_buffer23:
;robot_18F14k22_test.c,142 :: 		SSPBUF = position_set_point;
0x02FA	0xFFC9C035  	MOVFF       _position_set_point, SSPBUF
;robot_18F14k22_test.c,143 :: 		break;
0x02FE	0xD055      	BRA         L_i2c_write_data_to_buffer19
;robot_18F14k22_test.c,144 :: 		case 0x04:
L_i2c_write_data_to_buffer24:
;robot_18F14k22_test.c,145 :: 		SSPBUF = position_set_point >> 8;
0x0300	0xF000C036  	MOVFF       _position_set_point+1, R0
0x0304	0x0E00      	MOVLW       0
0x0306	0xBE36      	BTFSC       _position_set_point+1, 7 
0x0308	0x0EFF      	MOVLW       255
0x030A	0x6E01      	MOVWF       R1 
0x030C	0xFFC9C000  	MOVFF       R0, SSPBUF
;robot_18F14k22_test.c,146 :: 		break;
0x0310	0xD04C      	BRA         L_i2c_write_data_to_buffer19
;robot_18F14k22_test.c,147 :: 		case 0x05:
L_i2c_write_data_to_buffer25:
;robot_18F14k22_test.c,148 :: 		SSPBUF = motor_current_speed;
0x0312	0xFFC9C03A  	MOVFF       _motor_current_speed, SSPBUF
;robot_18F14k22_test.c,149 :: 		break;
0x0316	0xD049      	BRA         L_i2c_write_data_to_buffer19
;robot_18F14k22_test.c,150 :: 		case 0x06:
L_i2c_write_data_to_buffer26:
;robot_18F14k22_test.c,151 :: 		SSPBUF = motor_speed_in;
0x0318	0xFFC9C027  	MOVFF       _motor_speed_in, SSPBUF
;robot_18F14k22_test.c,152 :: 		break;
0x031C	0xD046      	BRA         L_i2c_write_data_to_buffer19
;robot_18F14k22_test.c,153 :: 		case 0x07:
L_i2c_write_data_to_buffer27:
;robot_18F14k22_test.c,154 :: 		SSPBUF = motor_speed_in >> 8;
0x031E	0x6AC9      	CLRF        SSPBUF 
;robot_18F14k22_test.c,155 :: 		break;
0x0320	0xD044      	BRA         L_i2c_write_data_to_buffer19
;robot_18F14k22_test.c,156 :: 		case 0x08:
L_i2c_write_data_to_buffer28:
;robot_18F14k22_test.c,157 :: 		SSPBUF = motor_speed_out;
0x0322	0xFFC9C028  	MOVFF       _motor_speed_out, SSPBUF
;robot_18F14k22_test.c,158 :: 		break;
0x0326	0xD041      	BRA         L_i2c_write_data_to_buffer19
;robot_18F14k22_test.c,159 :: 		case 0x09:
L_i2c_write_data_to_buffer29:
;robot_18F14k22_test.c,160 :: 		SSPBUF = motor_speed_out >> 8;
0x0328	0x6AC9      	CLRF        SSPBUF 
;robot_18F14k22_test.c,161 :: 		break;
0x032A	0xD03F      	BRA         L_i2c_write_data_to_buffer19
;robot_18F14k22_test.c,162 :: 		default:
L_i2c_write_data_to_buffer30:
;robot_18F14k22_test.c,163 :: 		SSPBUF = 0x00;
0x032C	0x6AC9      	CLRF        SSPBUF 
;robot_18F14k22_test.c,164 :: 		break;
0x032E	0xD03D      	BRA         L_i2c_write_data_to_buffer19
;robot_18F14k22_test.c,165 :: 		}
L_i2c_write_data_to_buffer18:
0x0330	0x0E00      	MOVLW       0
0x0332	0x1806      	XORWF       R6, 0 
0x0334	0xE102      	BNZ         L__i2c_write_data_to_buffer136
0x0336	0x0E00      	MOVLW       0
0x0338	0x1805      	XORWF       R5, 0 
L__i2c_write_data_to_buffer136:
0x033A	0xE08E      	BZ          L_i2c_write_data_to_buffer20
0x033C	0x0E00      	MOVLW       0
0x033E	0x1806      	XORWF       R6, 0 
0x0340	0xE102      	BNZ         L__i2c_write_data_to_buffer137
0x0342	0x0E01      	MOVLW       1
0x0344	0x1805      	XORWF       R5, 0 
L__i2c_write_data_to_buffer137:
0x0346	0xE08B      	BZ          L_i2c_write_data_to_buffer21
0x0348	0x0E00      	MOVLW       0
0x034A	0x1806      	XORWF       R6, 0 
0x034C	0xE102      	BNZ         L__i2c_write_data_to_buffer138
0x034E	0x0E02      	MOVLW       2
0x0350	0x1805      	XORWF       R5, 0 
L__i2c_write_data_to_buffer138:
0x0352	0xE08E      	BZ          L_i2c_write_data_to_buffer22
0x0354	0x0E00      	MOVLW       0
0x0356	0x1806      	XORWF       R6, 0 
0x0358	0xE102      	BNZ         L__i2c_write_data_to_buffer139
0x035A	0x0E03      	MOVLW       3
0x035C	0x1805      	XORWF       R5, 0 
L__i2c_write_data_to_buffer139:
0x035E	0xE0CD      	BZ          L_i2c_write_data_to_buffer23
0x0360	0x0E00      	MOVLW       0
0x0362	0x1806      	XORWF       R6, 0 
0x0364	0xE102      	BNZ         L__i2c_write_data_to_buffer140
0x0366	0x0E04      	MOVLW       4
0x0368	0x1805      	XORWF       R5, 0 
L__i2c_write_data_to_buffer140:
0x036A	0xE0CA      	BZ          L_i2c_write_data_to_buffer24
0x036C	0x0E00      	MOVLW       0
0x036E	0x1806      	XORWF       R6, 0 
0x0370	0xE102      	BNZ         L__i2c_write_data_to_buffer141
0x0372	0x0E05      	MOVLW       5
0x0374	0x1805      	XORWF       R5, 0 
L__i2c_write_data_to_buffer141:
0x0376	0xE0CD      	BZ          L_i2c_write_data_to_buffer25
0x0378	0x0E00      	MOVLW       0
0x037A	0x1806      	XORWF       R6, 0 
0x037C	0xE102      	BNZ         L__i2c_write_data_to_buffer142
0x037E	0x0E06      	MOVLW       6
0x0380	0x1805      	XORWF       R5, 0 
L__i2c_write_data_to_buffer142:
0x0382	0xE0CA      	BZ          L_i2c_write_data_to_buffer26
0x0384	0x0E00      	MOVLW       0
0x0386	0x1806      	XORWF       R6, 0 
0x0388	0xE102      	BNZ         L__i2c_write_data_to_buffer143
0x038A	0x0E07      	MOVLW       7
0x038C	0x1805      	XORWF       R5, 0 
L__i2c_write_data_to_buffer143:
0x038E	0xE0C7      	BZ          L_i2c_write_data_to_buffer27
0x0390	0x0E00      	MOVLW       0
0x0392	0x1806      	XORWF       R6, 0 
0x0394	0xE102      	BNZ         L__i2c_write_data_to_buffer144
0x0396	0x0E08      	MOVLW       8
0x0398	0x1805      	XORWF       R5, 0 
L__i2c_write_data_to_buffer144:
0x039A	0xE0C3      	BZ          L_i2c_write_data_to_buffer28
0x039C	0x0E00      	MOVLW       0
0x039E	0x1806      	XORWF       R6, 0 
0x03A0	0xE102      	BNZ         L__i2c_write_data_to_buffer145
0x03A2	0x0E09      	MOVLW       9
0x03A4	0x1805      	XORWF       R5, 0 
L__i2c_write_data_to_buffer145:
0x03A6	0xE0C0      	BZ          L_i2c_write_data_to_buffer29
0x03A8	0xD7C1      	BRA         L_i2c_write_data_to_buffer30
L_i2c_write_data_to_buffer19:
;robot_18F14k22_test.c,166 :: 		}
L_end_i2c_write_data_to_buffer:
0x03AA	0x0012      	RETURN      0
; end of _i2c_write_data_to_buffer
_i2c_read_data_from_buffer:
;robot_18F14k22_test.c,71 :: 		void i2c_read_data_from_buffer(){
;robot_18F14k22_test.c,72 :: 		unsigned short i = 0;
0x03AC	0x6A5F      	CLRF        i2c_read_data_from_buffer_i_L0 
;robot_18F14k22_test.c,73 :: 		unsigned short nb_data = nb_rx_octet-1;
0x03AE	0x043E      	DECF        _nb_rx_octet, 0 
0x03B0	0x6E00      	MOVWF       R0 
0x03B2	0x6A01      	CLRF        R1 
0x03B4	0x0E00      	MOVLW       0
0x03B6	0x5A01      	SUBWFB      R1, 1 
0x03B8	0xF009C000  	MOVFF       R0, R9
;robot_18F14k22_test.c,75 :: 		for(i=0; i<nb_data; i++){
0x03BC	0x6A5F      	CLRF        i2c_read_data_from_buffer_i_L0 
L_i2c_read_data_from_buffer0:
0x03BE	0x5009      	MOVF        R9, 0 
0x03C0	0x5C5F      	SUBWF       i2c_read_data_from_buffer_i_L0, 0 
0x03C2	0xB0D8      	BTFSC       STATUS, 0 
0x03C4	0xD128      	BRA         L_i2c_read_data_from_buffer1
;robot_18F14k22_test.c,76 :: 		switch(rxbuffer_tab[0]+i){
0x03C6	0x505F      	MOVF        i2c_read_data_from_buffer_i_L0, 0 
0x03C8	0x2445      	ADDWF       _rxbuffer_tab, 0 
0x03CA	0x6E07      	MOVWF       R7 
0x03CC	0x6A08      	CLRF        R8 
0x03CE	0x0E00      	MOVLW       0
0x03D0	0x2208      	ADDWFC      R8, 1 
0x03D2	0xD0E1      	BRA         L_i2c_read_data_from_buffer3
;robot_18F14k22_test.c,77 :: 		case 0x01:
L_i2c_read_data_from_buffer5:
;robot_18F14k22_test.c,78 :: 		state = RESET_OUT;
0x03D4	0x6A33      	CLRF        _state 
;robot_18F14k22_test.c,79 :: 		break;
0x03D6	0xD11D      	BRA         L_i2c_read_data_from_buffer4
;robot_18F14k22_test.c,80 :: 		case 0x02:
L_i2c_read_data_from_buffer6:
;robot_18F14k22_test.c,81 :: 		motor_on = (rxbuffer_tab[i+1]!=0x00);
0x03D8	0x505F      	MOVF        i2c_read_data_from_buffer_i_L0, 0 
0x03DA	0x0F01      	ADDLW       1
0x03DC	0x6E00      	MOVWF       R0 
0x03DE	0x6A01      	CLRF        R1 
0x03E0	0x0E00      	MOVLW       0
0x03E2	0x2201      	ADDWFC      R1, 1 
0x03E4	0x0E45      	MOVLW       _rxbuffer_tab
0x03E6	0x2400      	ADDWF       R0, 0 
0x03E8	0x6EE9      	MOVWF       FSR0L 
0x03EA	0x0E00      	MOVLW       hi_addr(_rxbuffer_tab)
0x03EC	0x2001      	ADDWFC      R1, 0 
0x03EE	0x6EEA      	MOVWF       FSR0H 
0x03F0	0x50EE      	MOVF        POSTINC0, 0 
0x03F2	0x0A00      	XORLW       0
0x03F4	0x0E00      	MOVLW       0
0x03F6	0xA4D8      	BTFSS       STATUS, 2 
0x03F8	0x0E01      	MOVLW       1
0x03FA	0x6E39      	MOVWF       _motor_on 
;robot_18F14k22_test.c,82 :: 		break;
0x03FC	0xD10A      	BRA         L_i2c_read_data_from_buffer4
;robot_18F14k22_test.c,83 :: 		case 0x03:
L_i2c_read_data_from_buffer7:
;robot_18F14k22_test.c,84 :: 		RC6_bit = (rxbuffer_tab[i+1]!=0x00);
0x03FE	0x505F      	MOVF        i2c_read_data_from_buffer_i_L0, 0 
0x0400	0x0F01      	ADDLW       1
0x0402	0x6E00      	MOVWF       R0 
0x0404	0x6A01      	CLRF        R1 
0x0406	0x0E00      	MOVLW       0
0x0408	0x2201      	ADDWFC      R1, 1 
0x040A	0x0E45      	MOVLW       _rxbuffer_tab
0x040C	0x2400      	ADDWF       R0, 0 
0x040E	0x6EE9      	MOVWF       FSR0L 
0x0410	0x0E00      	MOVLW       hi_addr(_rxbuffer_tab)
0x0412	0x2001      	ADDWFC      R1, 0 
0x0414	0x6EEA      	MOVWF       FSR0H 
0x0416	0x50EE      	MOVF        POSTINC0, 0 
0x0418	0x0A00      	XORLW       0
0x041A	0x0E00      	MOVLW       0
0x041C	0xA4D8      	BTFSS       STATUS, 2 
0x041E	0x0E01      	MOVLW       1
0x0420	0x6E00      	MOVWF       R0 
0x0422	0xB000      	BTFSC       R0, 0 
0x0424	0xD002      	BRA         L__i2c_read_data_from_buffer115
0x0426	0x9C82      	BCF         RC6_bit, BitPos(RC6_bit+0) 
0x0428	0xD001      	BRA         L__i2c_read_data_from_buffer116
L__i2c_read_data_from_buffer115:
0x042A	0x8C82      	BSF         RC6_bit, BitPos(RC6_bit+0) 
L__i2c_read_data_from_buffer116:
;robot_18F14k22_test.c,85 :: 		break;
0x042C	0xD0F2      	BRA         L_i2c_read_data_from_buffer4
;robot_18F14k22_test.c,86 :: 		case 0x04:
L_i2c_read_data_from_buffer8:
;robot_18F14k22_test.c,87 :: 		LED1 = (rxbuffer_tab[i+1]!=0x00);
0x042E	0x505F      	MOVF        i2c_read_data_from_buffer_i_L0, 0 
0x0430	0x0F01      	ADDLW       1
0x0432	0x6E00      	MOVWF       R0 
0x0434	0x6A01      	CLRF        R1 
0x0436	0x0E00      	MOVLW       0
0x0438	0x2201      	ADDWFC      R1, 1 
0x043A	0x0E45      	MOVLW       _rxbuffer_tab
0x043C	0x2400      	ADDWF       R0, 0 
0x043E	0x6EE9      	MOVWF       FSR0L 
0x0440	0x0E00      	MOVLW       hi_addr(_rxbuffer_tab)
0x0442	0x2001      	ADDWFC      R1, 0 
0x0444	0x6EEA      	MOVWF       FSR0H 
0x0446	0x50EE      	MOVF        POSTINC0, 0 
0x0448	0x0A00      	XORLW       0
0x044A	0x0E00      	MOVLW       0
0x044C	0xA4D8      	BTFSS       STATUS, 2 
0x044E	0x0E01      	MOVLW       1
0x0450	0x6E00      	MOVWF       R0 
0x0452	0xB000      	BTFSC       R0, 0 
0x0454	0xD002      	BRA         L__i2c_read_data_from_buffer117
0x0456	0x9082      	BCF         RC0_bit, BitPos(RC0_bit+0) 
0x0458	0xD001      	BRA         L__i2c_read_data_from_buffer118
L__i2c_read_data_from_buffer117:
0x045A	0x8082      	BSF         RC0_bit, BitPos(RC0_bit+0) 
L__i2c_read_data_from_buffer118:
;robot_18F14k22_test.c,88 :: 		break;
0x045C	0xD0DA      	BRA         L_i2c_read_data_from_buffer4
;robot_18F14k22_test.c,89 :: 		case 0x05:
L_i2c_read_data_from_buffer9:
;robot_18F14k22_test.c,90 :: 		error_interval = rxbuffer_tab[i+1];
0x045E	0x505F      	MOVF        i2c_read_data_from_buffer_i_L0, 0 
0x0460	0x0F01      	ADDLW       1
0x0462	0x6E00      	MOVWF       R0 
0x0464	0x6A01      	CLRF        R1 
0x0466	0x0E00      	MOVLW       0
0x0468	0x2201      	ADDWFC      R1, 1 
0x046A	0x0E45      	MOVLW       _rxbuffer_tab
0x046C	0x2400      	ADDWF       R0, 0 
0x046E	0x6EE9      	MOVWF       FSR0L 
0x0470	0x0E00      	MOVLW       hi_addr(_rxbuffer_tab)
0x0472	0x2001      	ADDWFC      R1, 0 
0x0474	0x6EEA      	MOVWF       FSR0H 
0x0476	0xF026CFEE  	MOVFF       POSTINC0, _error_interval
;robot_18F14k22_test.c,91 :: 		break;
0x047A	0xD0CB      	BRA         L_i2c_read_data_from_buffer4
;robot_18F14k22_test.c,92 :: 		case 0x06:
L_i2c_read_data_from_buffer10:
;robot_18F14k22_test.c,93 :: 		position_reached_enable = rxbuffer_tab[i+1];
0x047C	0x505F      	MOVF        i2c_read_data_from_buffer_i_L0, 0 
0x047E	0x0F01      	ADDLW       1
0x0480	0x6E00      	MOVWF       R0 
0x0482	0x6A01      	CLRF        R1 
0x0484	0x0E00      	MOVLW       0
0x0486	0x2201      	ADDWFC      R1, 1 
0x0488	0x0E45      	MOVLW       _rxbuffer_tab
0x048A	0x2400      	ADDWF       R0, 0 
0x048C	0x6EE9      	MOVWF       FSR0L 
0x048E	0x0E00      	MOVLW       hi_addr(_rxbuffer_tab)
0x0490	0x2001      	ADDWFC      R1, 0 
0x0492	0x6EEA      	MOVWF       FSR0H 
0x0494	0xF034CFEE  	MOVFF       POSTINC0, _position_reached_enable
;robot_18F14k22_test.c,94 :: 		break;
0x0498	0xD0BC      	BRA         L_i2c_read_data_from_buffer4
;robot_18F14k22_test.c,95 :: 		case 0x10:  // consigne de postion
L_i2c_read_data_from_buffer11:
;robot_18F14k22_test.c,96 :: 		if(nb_data >= i+2){
0x049A	0x0E02      	MOVLW       2
0x049C	0x245F      	ADDWF       i2c_read_data_from_buffer_i_L0, 0 
0x049E	0x6E01      	MOVWF       R1 
0x04A0	0x6A02      	CLRF        R2 
0x04A2	0x0E00      	MOVLW       0
0x04A4	0x2202      	ADDWFC      R2, 1 
0x04A6	0x0E80      	MOVLW       128
0x04A8	0x6E00      	MOVWF       R0 
0x04AA	0x0E80      	MOVLW       128
0x04AC	0x1802      	XORWF       R2, 0 
0x04AE	0x5C00      	SUBWF       R0, 0 
0x04B0	0xE102      	BNZ         L__i2c_read_data_from_buffer119
0x04B2	0x5001      	MOVF        R1, 0 
0x04B4	0x5C09      	SUBWF       R9, 0 
L__i2c_read_data_from_buffer119:
0x04B6	0xE32D      	BNC         L_i2c_read_data_from_buffer12
;robot_18F14k22_test.c,97 :: 		position_set_point = 4*(rxbuffer_tab[i+1] | (rxbuffer_tab[i+2] << 8));
0x04B8	0x505F      	MOVF        i2c_read_data_from_buffer_i_L0, 0 
0x04BA	0x0F01      	ADDLW       1
0x04BC	0x6E05      	MOVWF       R5 
0x04BE	0x6A06      	CLRF        R6 
0x04C0	0x0E00      	MOVLW       0
0x04C2	0x2206      	ADDWFC      R6, 1 
0x04C4	0x0E45      	MOVLW       _rxbuffer_tab
0x04C6	0x2405      	ADDWF       R5, 0 
0x04C8	0x6EE9      	MOVWF       FSR0L 
0x04CA	0x0E00      	MOVLW       hi_addr(_rxbuffer_tab)
0x04CC	0x2006      	ADDWFC      R6, 0 
0x04CE	0x6EEA      	MOVWF       FSR0H 
0x04D0	0xF004CFEE  	MOVFF       POSTINC0, R4
0x04D4	0x0E02      	MOVLW       2
0x04D6	0x245F      	ADDWF       i2c_read_data_from_buffer_i_L0, 0 
0x04D8	0x6E00      	MOVWF       R0 
0x04DA	0x6A01      	CLRF        R1 
0x04DC	0x0E00      	MOVLW       0
0x04DE	0x2201      	ADDWFC      R1, 1 
0x04E0	0x0E45      	MOVLW       _rxbuffer_tab
0x04E2	0x2400      	ADDWF       R0, 0 
0x04E4	0x6EE9      	MOVWF       FSR0L 
0x04E6	0x0E00      	MOVLW       hi_addr(_rxbuffer_tab)
0x04E8	0x2001      	ADDWFC      R1, 0 
0x04EA	0x6EEA      	MOVWF       FSR0H 
0x04EC	0xF003CFEE  	MOVFF       POSTINC0, R3
0x04F0	0xF001C003  	MOVFF       R3, R1
0x04F4	0x6A00      	CLRF        R0 
0x04F6	0x5000      	MOVF        R0, 0 
0x04F8	0x1004      	IORWF       R4, 0 
0x04FA	0x6E35      	MOVWF       _position_set_point 
0x04FC	0x0E00      	MOVLW       0
0x04FE	0x1001      	IORWF       R1, 0 
0x0500	0x6E36      	MOVWF       _position_set_point+1 
0x0502	0x3635      	RLCF        _position_set_point, 1 
0x0504	0x9035      	BCF         _position_set_point, 0 
0x0506	0x3636      	RLCF        _position_set_point+1, 1 
0x0508	0x3635      	RLCF        _position_set_point, 1 
0x050A	0x9035      	BCF         _position_set_point, 0 
0x050C	0x3636      	RLCF        _position_set_point+1, 1 
;robot_18F14k22_test.c,98 :: 		i++;
0x050E	0xF05FC005  	MOVFF       R5, i2c_read_data_from_buffer_i_L0
;robot_18F14k22_test.c,99 :: 		}
L_i2c_read_data_from_buffer12:
;robot_18F14k22_test.c,100 :: 		break;
0x0512	0xD07F      	BRA         L_i2c_read_data_from_buffer4
;robot_18F14k22_test.c,102 :: 		case 0x12:  // consigne de vitesse in
L_i2c_read_data_from_buffer13:
;robot_18F14k22_test.c,103 :: 		if(nb_data >= i+2){
0x0514	0x0E02      	MOVLW       2
0x0516	0x245F      	ADDWF       i2c_read_data_from_buffer_i_L0, 0 
0x0518	0x6E01      	MOVWF       R1 
0x051A	0x6A02      	CLRF        R2 
0x051C	0x0E00      	MOVLW       0
0x051E	0x2202      	ADDWFC      R2, 1 
0x0520	0x0E80      	MOVLW       128
0x0522	0x6E00      	MOVWF       R0 
0x0524	0x0E80      	MOVLW       128
0x0526	0x1802      	XORWF       R2, 0 
0x0528	0x5C00      	SUBWF       R0, 0 
0x052A	0xE102      	BNZ         L__i2c_read_data_from_buffer120
0x052C	0x5001      	MOVF        R1, 0 
0x052E	0x5C09      	SUBWF       R9, 0 
L__i2c_read_data_from_buffer120:
0x0530	0xE310      	BNC         L_i2c_read_data_from_buffer14
;robot_18F14k22_test.c,104 :: 		motor_speed_in = rxbuffer_tab[i+1] | (rxbuffer_tab[i+2] << 8);
0x0532	0x505F      	MOVF        i2c_read_data_from_buffer_i_L0, 0 
0x0534	0x0F01      	ADDLW       1
0x0536	0x6E00      	MOVWF       R0 
0x0538	0x6A01      	CLRF        R1 
0x053A	0x0E00      	MOVLW       0
0x053C	0x2201      	ADDWFC      R1, 1 
0x053E	0x0E45      	MOVLW       _rxbuffer_tab
0x0540	0x2400      	ADDWF       R0, 0 
0x0542	0x6EE9      	MOVWF       FSR0L 
0x0544	0x0E00      	MOVLW       hi_addr(_rxbuffer_tab)
0x0546	0x2001      	ADDWFC      R1, 0 
0x0548	0x6EEA      	MOVWF       FSR0H 
0x054A	0xF027CFEE  	MOVFF       POSTINC0, _motor_speed_in
;robot_18F14k22_test.c,105 :: 		i++;
0x054E	0xF05FC000  	MOVFF       R0, i2c_read_data_from_buffer_i_L0
;robot_18F14k22_test.c,106 :: 		}
L_i2c_read_data_from_buffer14:
;robot_18F14k22_test.c,107 :: 		break;
0x0552	0xD05F      	BRA         L_i2c_read_data_from_buffer4
;robot_18F14k22_test.c,108 :: 		case 0x14:  // consigne de vitesse out
L_i2c_read_data_from_buffer15:
;robot_18F14k22_test.c,109 :: 		if(nb_data >= i+2){
0x0554	0x0E02      	MOVLW       2
0x0556	0x245F      	ADDWF       i2c_read_data_from_buffer_i_L0, 0 
0x0558	0x6E01      	MOVWF       R1 
0x055A	0x6A02      	CLRF        R2 
0x055C	0x0E00      	MOVLW       0
0x055E	0x2202      	ADDWFC      R2, 1 
0x0560	0x0E80      	MOVLW       128
0x0562	0x6E00      	MOVWF       R0 
0x0564	0x0E80      	MOVLW       128
0x0566	0x1802      	XORWF       R2, 0 
0x0568	0x5C00      	SUBWF       R0, 0 
0x056A	0xE102      	BNZ         L__i2c_read_data_from_buffer121
0x056C	0x5001      	MOVF        R1, 0 
0x056E	0x5C09      	SUBWF       R9, 0 
L__i2c_read_data_from_buffer121:
0x0570	0xE310      	BNC         L_i2c_read_data_from_buffer16
;robot_18F14k22_test.c,110 :: 		motor_speed_out = rxbuffer_tab[i+1] | (rxbuffer_tab[i+2] << 8);
0x0572	0x505F      	MOVF        i2c_read_data_from_buffer_i_L0, 0 
0x0574	0x0F01      	ADDLW       1
0x0576	0x6E00      	MOVWF       R0 
0x0578	0x6A01      	CLRF        R1 
0x057A	0x0E00      	MOVLW       0
0x057C	0x2201      	ADDWFC      R1, 1 
0x057E	0x0E45      	MOVLW       _rxbuffer_tab
0x0580	0x2400      	ADDWF       R0, 0 
0x0582	0x6EE9      	MOVWF       FSR0L 
0x0584	0x0E00      	MOVLW       hi_addr(_rxbuffer_tab)
0x0586	0x2001      	ADDWFC      R1, 0 
0x0588	0x6EEA      	MOVWF       FSR0H 
0x058A	0xF028CFEE  	MOVFF       POSTINC0, _motor_speed_out
;robot_18F14k22_test.c,111 :: 		i++;
0x058E	0xF05FC000  	MOVFF       R0, i2c_read_data_from_buffer_i_L0
;robot_18F14k22_test.c,112 :: 		}
L_i2c_read_data_from_buffer16:
;robot_18F14k22_test.c,113 :: 		break;
0x0592	0xD03F      	BRA         L_i2c_read_data_from_buffer4
;robot_18F14k22_test.c,114 :: 		default:
L_i2c_read_data_from_buffer17:
;robot_18F14k22_test.c,115 :: 		break;
0x0594	0xD03E      	BRA         L_i2c_read_data_from_buffer4
;robot_18F14k22_test.c,116 :: 		}
L_i2c_read_data_from_buffer3:
0x0596	0x0E00      	MOVLW       0
0x0598	0x1808      	XORWF       R8, 0 
0x059A	0xE102      	BNZ         L__i2c_read_data_from_buffer122
0x059C	0x0E01      	MOVLW       1
0x059E	0x1807      	XORWF       R7, 0 
L__i2c_read_data_from_buffer122:
0x05A0	0xB4D8      	BTFSC       STATUS, 2 
0x05A2	0xD718      	BRA         L_i2c_read_data_from_buffer5
0x05A4	0x0E00      	MOVLW       0
0x05A6	0x1808      	XORWF       R8, 0 
0x05A8	0xE102      	BNZ         L__i2c_read_data_from_buffer123
0x05AA	0x0E02      	MOVLW       2
0x05AC	0x1807      	XORWF       R7, 0 
L__i2c_read_data_from_buffer123:
0x05AE	0xB4D8      	BTFSC       STATUS, 2 
0x05B0	0xD713      	BRA         L_i2c_read_data_from_buffer6
0x05B2	0x0E00      	MOVLW       0
0x05B4	0x1808      	XORWF       R8, 0 
0x05B6	0xE102      	BNZ         L__i2c_read_data_from_buffer124
0x05B8	0x0E03      	MOVLW       3
0x05BA	0x1807      	XORWF       R7, 0 
L__i2c_read_data_from_buffer124:
0x05BC	0xB4D8      	BTFSC       STATUS, 2 
0x05BE	0xD71F      	BRA         L_i2c_read_data_from_buffer7
0x05C0	0x0E00      	MOVLW       0
0x05C2	0x1808      	XORWF       R8, 0 
0x05C4	0xE102      	BNZ         L__i2c_read_data_from_buffer125
0x05C6	0x0E04      	MOVLW       4
0x05C8	0x1807      	XORWF       R7, 0 
L__i2c_read_data_from_buffer125:
0x05CA	0xB4D8      	BTFSC       STATUS, 2 
0x05CC	0xD730      	BRA         L_i2c_read_data_from_buffer8
0x05CE	0x0E00      	MOVLW       0
0x05D0	0x1808      	XORWF       R8, 0 
0x05D2	0xE102      	BNZ         L__i2c_read_data_from_buffer126
0x05D4	0x0E05      	MOVLW       5
0x05D6	0x1807      	XORWF       R7, 0 
L__i2c_read_data_from_buffer126:
0x05D8	0xB4D8      	BTFSC       STATUS, 2 
0x05DA	0xD741      	BRA         L_i2c_read_data_from_buffer9
0x05DC	0x0E00      	MOVLW       0
0x05DE	0x1808      	XORWF       R8, 0 
0x05E0	0xE102      	BNZ         L__i2c_read_data_from_buffer127
0x05E2	0x0E06      	MOVLW       6
0x05E4	0x1807      	XORWF       R7, 0 
L__i2c_read_data_from_buffer127:
0x05E6	0xB4D8      	BTFSC       STATUS, 2 
0x05E8	0xD749      	BRA         L_i2c_read_data_from_buffer10
0x05EA	0x0E00      	MOVLW       0
0x05EC	0x1808      	XORWF       R8, 0 
0x05EE	0xE102      	BNZ         L__i2c_read_data_from_buffer128
0x05F0	0x0E10      	MOVLW       16
0x05F2	0x1807      	XORWF       R7, 0 
L__i2c_read_data_from_buffer128:
0x05F4	0xB4D8      	BTFSC       STATUS, 2 
0x05F6	0xD751      	BRA         L_i2c_read_data_from_buffer11
0x05F8	0x0E00      	MOVLW       0
0x05FA	0x1808      	XORWF       R8, 0 
0x05FC	0xE102      	BNZ         L__i2c_read_data_from_buffer129
0x05FE	0x0E12      	MOVLW       18
0x0600	0x1807      	XORWF       R7, 0 
L__i2c_read_data_from_buffer129:
0x0602	0xE088      	BZ          L_i2c_read_data_from_buffer13
0x0604	0x0E00      	MOVLW       0
0x0606	0x1808      	XORWF       R8, 0 
0x0608	0xE102      	BNZ         L__i2c_read_data_from_buffer130
0x060A	0x0E14      	MOVLW       20
0x060C	0x1807      	XORWF       R7, 0 
L__i2c_read_data_from_buffer130:
0x060E	0xE0A2      	BZ          L_i2c_read_data_from_buffer15
0x0610	0xD7C1      	BRA         L_i2c_read_data_from_buffer17
L_i2c_read_data_from_buffer4:
;robot_18F14k22_test.c,75 :: 		for(i=0; i<nb_data; i++){
0x0612	0x2A5F      	INCF        i2c_read_data_from_buffer_i_L0, 1 
;robot_18F14k22_test.c,117 :: 		}
0x0614	0xD6D4      	BRA         L_i2c_read_data_from_buffer0
L_i2c_read_data_from_buffer1:
;robot_18F14k22_test.c,118 :: 		watchdog_restart = watchdog_restart_default;
0x0616	0xF03FC03D  	MOVFF       _watchdog_restart_default, _watchdog_restart
;robot_18F14k22_test.c,119 :: 		}
L_end_i2c_read_data_from_buffer:
0x061A	0x0012      	RETURN      0
; end of _i2c_read_data_from_buffer
_init_i2c:
;robot_18F14k22_test.c,487 :: 		void init_i2c(){
;robot_18F14k22_test.c,490 :: 		TRISB4_bit = 1; // RB4 en entrée
0x061C	0x8893      	BSF         TRISB4_bit, BitPos(TRISB4_bit+0) 
;robot_18F14k22_test.c,491 :: 		TRISB6_bit = 1; // RB6 en entrée
0x061E	0x8C93      	BSF         TRISB6_bit, BitPos(TRISB6_bit+0) 
;robot_18F14k22_test.c,494 :: 		PIE1.SSPIE = 1; // Synchronous Serial Port Interrupt Enable bit
0x0620	0x869D      	BSF         PIE1, 3 
;robot_18F14k22_test.c,495 :: 		PIR1.SSPIF = 0; // Synchronous Serial Port (SSP) Interrupt Flag, I2C Slave
0x0622	0x969E      	BCF         PIR1, 3 
;robot_18F14k22_test.c,497 :: 		PIR2.BCLIE = 1;
0x0624	0x86A1      	BSF         PIR2, 3 
;robot_18F14k22_test.c,498 :: 		PIR2.BCLIF = 0;
0x0626	0x96A1      	BCF         PIR2, 3 
;robot_18F14k22_test.c,501 :: 		SSPADD = (ADDRESS_I2C << 1); // Address Register, Get address (7-1 bit). Lsb is read/write flag
0x0628	0x0E70      	MOVLW       112
0x062A	0x6EC8      	MOVWF       SSPADD 
;robot_18F14k22_test.c,502 :: 		SSPMSK = 0xFF; // A zero (‘0’) bit in the SSPMSK register has the effect of making
0x062C	0x0EFF      	MOVLW       255
0x062E	0x6E6F      	MOVWF       SSPMSK 
;robot_18F14k22_test.c,506 :: 		SSPSTAT.SMP = 1; // Slew Rate Control bit
0x0630	0x8EC7      	BSF         SSPSTAT, 7 
;robot_18F14k22_test.c,509 :: 		SSPSTAT.CKE = 1; // // SMBusTM Select bit (1 = Enable SMBus specific inputs)
0x0632	0x8CC7      	BSF         SSPSTAT, 6 
;robot_18F14k22_test.c,512 :: 		SSPCON2 = 0x00;
0x0634	0x6AC5      	CLRF        SSPCON2 
;robot_18F14k22_test.c,513 :: 		SSPCON2.GCEN = 0; // General Call Enable bit (0 = disabled)
0x0636	0x9EC5      	BCF         SSPCON2, 7 
;robot_18F14k22_test.c,514 :: 		SSPCON2.SEN = 1; // Start Condition Enable/Stretch Enable bit (1 = enabled)
0x0638	0x80C5      	BSF         SSPCON2, 0 
;robot_18F14k22_test.c,517 :: 		SSPCON1.WCOL = 0; // Write Collision Detect bit
0x063A	0x9EC6      	BCF         SSPCON1, 7 
;robot_18F14k22_test.c,518 :: 		SSPCON1.SSPOV = 0; // Receive Overflow Indicator bit
0x063C	0x9CC6      	BCF         SSPCON1, 6 
;robot_18F14k22_test.c,519 :: 		SSPCON1.CKP = 1; // SCK Release Control bit (1=Release clock)
0x063E	0x88C6      	BSF         SSPCON1, 4 
;robot_18F14k22_test.c,520 :: 		SSPCON1.SSPM3 = 0b1; // I2C Slave mode, 7-bit address with Start and Stop bit interrupts enabled
0x0640	0x86C6      	BSF         SSPCON1, 3 
;robot_18F14k22_test.c,521 :: 		SSPCON1.SSPM2 = 0b1; // I2C Slave mode, 7-bit address with Start and Stop bit interrupts enabled
0x0642	0x84C6      	BSF         SSPCON1, 2 
;robot_18F14k22_test.c,522 :: 		SSPCON1.SSPM1 = 0b1; // I2C Slave mode, 7-bit address with Start and Stop bit interrupts enabled
0x0644	0x82C6      	BSF         SSPCON1, 1 
;robot_18F14k22_test.c,523 :: 		SSPCON1.SSPM0 = 0b0; // I2C Slave mode, 7-bit address with Start and Stop bit interrupts enabled
0x0646	0x90C6      	BCF         SSPCON1, 0 
;robot_18F14k22_test.c,526 :: 		SSPCON1.SSPEN = 1; // Synchronous Serial Port Enable bit
0x0648	0x8AC6      	BSF         SSPCON1, 5 
;robot_18F14k22_test.c,527 :: 		}
L_end_init_i2c:
0x064A	0x0012      	RETURN      0
; end of _init_i2c
_init_timer0:
;robot_18F14k22_test.c,289 :: 		void init_timer0(){
;robot_18F14k22_test.c,290 :: 		T0CON = 0x85; // TIMER0 ON (1 s)
0x064C	0x0E85      	MOVLW       133
0x064E	0x6ED5      	MOVWF       T0CON 
;robot_18F14k22_test.c,291 :: 		TMR0H = 0x0B;
0x0650	0x0E0B      	MOVLW       11
0x0652	0x6ED7      	MOVWF       TMR0H 
;robot_18F14k22_test.c,292 :: 		TMR0L = 0xDC;
0x0654	0x0EDC      	MOVLW       220
0x0656	0x6ED6      	MOVWF       TMR0L 
;robot_18F14k22_test.c,293 :: 		TMR0IE_bit = 0;
0x0658	0x9AF2      	BCF         TMR0IE_bit, BitPos(TMR0IE_bit+0) 
;robot_18F14k22_test.c,294 :: 		}
L_end_init_timer0:
0x065A	0x0012      	RETURN      0
; end of _init_timer0
_init_io:
;robot_18F14k22_test.c,299 :: 		void init_io(){
;robot_18F14k22_test.c,300 :: 		ANSEL = 0x00;
0x065C	0x6A7E      	CLRF        ANSEL 
;robot_18F14k22_test.c,301 :: 		ANSELH = 0x00;
0x065E	0x6A7F      	CLRF        ANSELH 
;robot_18F14k22_test.c,303 :: 		CM1CON0 = 0x00; // Not using the comparators
0x0660	0x6A6D      	CLRF        CM1CON0 
;robot_18F14k22_test.c,304 :: 		CM2CON0 = 0x00; //
0x0662	0x6A6B      	CLRF        CM2CON0 
;robot_18F14k22_test.c,306 :: 		TRISA0_bit = 1; // RA0 en entrée
0x0664	0x8092      	BSF         TRISA0_bit, BitPos(TRISA0_bit+0) 
;robot_18F14k22_test.c,307 :: 		TRISA1_bit = 1; // RA1 en entrée
0x0666	0x8292      	BSF         TRISA1_bit, BitPos(TRISA1_bit+0) 
;robot_18F14k22_test.c,308 :: 		TRISA2_bit = 1; // RA2 en entrée
0x0668	0x8492      	BSF         TRISA2_bit, BitPos(TRISA2_bit+0) 
;robot_18F14k22_test.c,310 :: 		TRISA4_bit = 1; // RA4 en entrée
0x066A	0x8892      	BSF         TRISA4_bit, BitPos(TRISA4_bit+0) 
;robot_18F14k22_test.c,312 :: 		TRISA5_bit = 0; // RA5 en sortie
0x066C	0x9A92      	BCF         TRISA5_bit, BitPos(TRISA5_bit+0) 
;robot_18F14k22_test.c,314 :: 		INTCON2.RABPU = 0; // PORTA and PORTB Pull-up Enable bit
0x066E	0x9EF1      	BCF         INTCON2, 7 
;robot_18F14k22_test.c,315 :: 		WPUA.WPUA0 = 1; // Pull-up enabled sur RA0, sur inter de butée haute
0x0670	0x8077      	BSF         WPUA, 0 
;robot_18F14k22_test.c,316 :: 		WPUA.WPUA1 = 1; // Pull-up enabled sur RA1, sur inter de butée basse
0x0672	0x8277      	BSF         WPUA, 1 
;robot_18F14k22_test.c,320 :: 		TRISB5_bit = 0; // RB5 en sortie
0x0674	0x9A93      	BCF         TRISB5_bit, BitPos(TRISB5_bit+0) 
;robot_18F14k22_test.c,321 :: 		TRISB7_bit = 0; // RB7 en sortie
0x0676	0x9E93      	BCF         TRISB7_bit, BitPos(TRISB7_bit+0) 
;robot_18F14k22_test.c,323 :: 		TRISC = 0xFF;
0x0678	0x0EFF      	MOVLW       255
0x067A	0x6E94      	MOVWF       TRISC 
;robot_18F14k22_test.c,324 :: 		TRISC0_bit = 0; // RC0 en sortie
0x067C	0x9094      	BCF         TRISC0_bit, BitPos(TRISC0_bit+0) 
;robot_18F14k22_test.c,325 :: 		TRISC2_bit = 0; // RC0 en sortie
0x067E	0x9494      	BCF         TRISC2_bit, BitPos(TRISC2_bit+0) 
;robot_18F14k22_test.c,326 :: 		TRISC4_bit = 0; // RC4 en sortie
0x0680	0x9894      	BCF         TRISC4_bit, BitPos(TRISC4_bit+0) 
;robot_18F14k22_test.c,327 :: 		TRISC5_bit = 0; // RC5 en sortie
0x0682	0x9A94      	BCF         TRISC5_bit, BitPos(TRISC5_bit+0) 
;robot_18F14k22_test.c,328 :: 		TRISC6_bit = 0; // RC6 en sortie
0x0684	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;robot_18F14k22_test.c,329 :: 		TRISC7_bit = 0; // RC7 en sortie
0x0686	0x9E94      	BCF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;robot_18F14k22_test.c,331 :: 		RC6_bit = 0;
0x0688	0x9C82      	BCF         RC6_bit, BitPos(RC6_bit+0) 
;robot_18F14k22_test.c,332 :: 		}
L_end_init_io:
0x068A	0x0012      	RETURN      0
; end of _init_io
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x068C	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x068E	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0692	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0694	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0696	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0698	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x069A	0x0012      	RETURN      0
; end of ___CC2DW
_UART1_Init:
;__Lib_UART_b57.c,19 :: 		
;__Lib_UART_b57.c,22 :: 		
0x069C	0x0EFF      	MOVLW       _UART1_Write
0x069E	0x6E51      	MOVWF       _UART_Wr_Ptr 
0x06A0	0x0EFF      	MOVLW       hi_addr(_UART1_Write)
0x06A2	0x6E52      	MOVWF       _UART_Wr_Ptr+1 
0x06A4	0x0EFF      	MOVLW       FARG_UART1_Write_data_
0x06A6	0x6E53      	MOVWF       _UART_Wr_Ptr+2 
0x06A8	0x0EFF      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x06AA	0x6E54      	MOVWF       _UART_Wr_Ptr+3 
;__Lib_UART_b57.c,23 :: 		
0x06AC	0x0EFF      	MOVLW       _UART1_Read
0x06AE	0x6E55      	MOVWF       _UART_Rd_Ptr 
0x06B0	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x06B2	0x6E56      	MOVWF       _UART_Rd_Ptr+1 
0x06B4	0x0E00      	MOVLW       0
0x06B6	0x6E57      	MOVWF       _UART_Rd_Ptr+2 
0x06B8	0x0E00      	MOVLW       0
0x06BA	0x6E58      	MOVWF       _UART_Rd_Ptr+3 
;__Lib_UART_b57.c,24 :: 		
0x06BC	0x0EFF      	MOVLW       _UART1_Data_Ready
0x06BE	0x6E4D      	MOVWF       _UART_Rdy_Ptr 
0x06C0	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x06C2	0x6E4E      	MOVWF       _UART_Rdy_Ptr+1 
0x06C4	0x0E00      	MOVLW       0
0x06C6	0x6E4F      	MOVWF       _UART_Rdy_Ptr+2 
0x06C8	0x0E00      	MOVLW       0
0x06CA	0x6E50      	MOVWF       _UART_Rdy_Ptr+3 
;__Lib_UART_b57.c,25 :: 		
0x06CC	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x06CE	0x6E41      	MOVWF       _UART_Tx_Idle_Ptr 
0x06D0	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x06D2	0x6E42      	MOVWF       _UART_Tx_Idle_Ptr+1 
0x06D4	0x0E00      	MOVLW       0
0x06D6	0x6E43      	MOVWF       _UART_Tx_Idle_Ptr+2 
0x06D8	0x0E00      	MOVLW       0
0x06DA	0x6E44      	MOVWF       _UART_Tx_Idle_Ptr+3 
;__Lib_UART_b57.c,27 :: 		
0x06DC	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_b57.c,28 :: 		
0x06DE	0x0E90      	MOVLW       144
0x06E0	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_b57.c,29 :: 		
0x06E2	0x8A93      	BSF         TRISB5_bit, BitPos(TRISB5_bit+0) 
;__Lib_UART_b57.c,30 :: 		
0x06E4	0x8E93      	BSF         TRISB7_bit, BitPos(TRISB7_bit+0) 
;__Lib_UART_b57.c,32 :: 		
L_UART1_Init0:
0x06E6	0xAA9E      	BTFSS       PIR1, 5 
0x06E8	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_b57.c,33 :: 		
0x06EA	0xF000CFAE  	MOVFF       RCREG, R0
0x06EE	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_b57.c,34 :: 		
L_end_UART1_Init:
0x06F0	0x0012      	RETURN      0
; end of _UART1_Init
_read_butee:
;robot_18F14k22_test.c,171 :: 		void read_butee(){
;robot_18F14k22_test.c,172 :: 		if (RA0_bit == 0){
0x06F2	0xB080      	BTFSC       RA0_bit, BitPos(RA0_bit+0) 
0x06F4	0xD004      	BRA         L_read_butee31
;robot_18F14k22_test.c,173 :: 		butee_out = 1;
0x06F6	0x0E01      	MOVLW       1
0x06F8	0x6E25      	MOVWF       _butee_out 
;robot_18F14k22_test.c,174 :: 		LED1 = 1;
0x06FA	0x8082      	BSF         RC0_bit, BitPos(RC0_bit+0) 
;robot_18F14k22_test.c,175 :: 		}
0x06FC	0xD002      	BRA         L_read_butee32
L_read_butee31:
;robot_18F14k22_test.c,177 :: 		butee_out = 0;
0x06FE	0x6A25      	CLRF        _butee_out 
;robot_18F14k22_test.c,178 :: 		LED1 = 0;
0x0700	0x9082      	BCF         RC0_bit, BitPos(RC0_bit+0) 
;robot_18F14k22_test.c,179 :: 		}
L_read_butee32:
;robot_18F14k22_test.c,180 :: 		if (RA1_bit == 0)
0x0702	0xB280      	BTFSC       RA1_bit, BitPos(RA1_bit+0) 
0x0704	0xD003      	BRA         L_read_butee33
;robot_18F14k22_test.c,181 :: 		butee_in = 1;
0x0706	0x0E01      	MOVLW       1
0x0708	0x6E24      	MOVWF       _butee_in 
0x070A	0xD001      	BRA         L_read_butee34
L_read_butee33:
;robot_18F14k22_test.c,183 :: 		butee_in = 0;
0x070C	0x6A24      	CLRF        _butee_in 
L_read_butee34:
;robot_18F14k22_test.c,184 :: 		}
L_end_read_butee:
0x070E	0x0012      	RETURN      0
; end of _read_butee
_PWM1_Init:
;__Lib_PWM_c5.c,4 :: 		
;__Lib_PWM_c5.c,5 :: 		
;__Lib_PWM_c5.c,6 :: 		
0x0710	0x6ABE      	CLRF        CCPR1L 
;__Lib_PWM_c5.c,7 :: 		
0x0712	0x98BD      	BCF         CCP1CON, 4 
;__Lib_PWM_c5.c,8 :: 		
0x0714	0x9ABD      	BCF         CCP1CON, 5 
;__Lib_PWM_c5.c,9 :: 		
L_end_PWM1_Init:
0x0716	0x0012      	RETURN      0
; end of _PWM1_Init
_PWM1_Start:
;__Lib_PWM_c5.c,22 :: 		
;__Lib_PWM_c5.c,23 :: 		
0x0718	0x9A94      	BCF         TRISC5_bit, BitPos(TRISC5_bit+0) 
;__Lib_PWM_c5.c,24 :: 		
0x071A	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c5.c,25 :: 		
0x071C	0x0E0C      	MOVLW       12
0x071E	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c5.c,26 :: 		
L_end_PWM1_Start:
0x0720	0x0012      	RETURN      0
; end of _PWM1_Start
_interrupt:
;robot_18F14k22_test.c,442 :: 		void interrupt(){
0x0722	0xF023C000  	MOVFF       R0, 35
0x0726	0xF022C00C  	MOVFF       R12, 34
0x072A	0xF021C00D  	MOVFF       R13, 33
;robot_18F14k22_test.c,444 :: 		if(INTCON.INT0IF == 1) {
0x072E	0xA2F2      	BTFSS       INTCON, 1 
0x0730	0xD015      	BRA         L_interrupt82
;robot_18F14k22_test.c,445 :: 		if (!RA0_bit){
0x0732	0xB080      	BTFSC       RA0_bit, BitPos(RA0_bit+0) 
0x0734	0xD011      	BRA         L_interrupt83
;robot_18F14k22_test.c,446 :: 		delay_ms(2);
0x0736	0x0E0B      	MOVLW       11
0x0738	0x6E0C      	MOVWF       R12, 0
0x073A	0x0E62      	MOVLW       98
0x073C	0x6E0D      	MOVWF       R13, 0
L_interrupt84:
0x073E	0x2E0D      	DECFSZ      R13, 1, 0
0x0740	0xD7FE      	BRA         L_interrupt84
0x0742	0x2E0C      	DECFSZ      R12, 1, 0
0x0744	0xD7FC      	BRA         L_interrupt84
0x0746	0x0000      	NOP
;robot_18F14k22_test.c,447 :: 		if (!RA0_bit){
0x0748	0xB080      	BTFSC       RA0_bit, BitPos(RA0_bit+0) 
0x074A	0xD006      	BRA         L_interrupt85
;robot_18F14k22_test.c,448 :: 		butee_out = 1;
0x074C	0x0E01      	MOVLW       1
0x074E	0x6E25      	MOVWF       _butee_out 
;robot_18F14k22_test.c,449 :: 		CCPR1 = 50;  // Rapport cyclique à 50% pour stopper le moteur et garder du couple (=> pose problème car dépend du sens !)
0x0750	0x0E32      	MOVLW       50
0x0752	0x6EBE      	MOVWF       CCPR1 
0x0754	0x0E00      	MOVLW       0
0x0756	0x6EBF      	MOVWF       CCPR1+1 
;robot_18F14k22_test.c,451 :: 		}
L_interrupt85:
;robot_18F14k22_test.c,452 :: 		}
L_interrupt83:
;robot_18F14k22_test.c,453 :: 		INTCON.INT0IF = 0;
0x0758	0x92F2      	BCF         INTCON, 1 
;robot_18F14k22_test.c,454 :: 		}
0x075A	0xD027      	BRA         L_interrupt86
L_interrupt82:
;robot_18F14k22_test.c,457 :: 		else if(INTCON3.INT1IF == 1) {
0x075C	0xA0F0      	BTFSS       INTCON3, 0 
0x075E	0xD015      	BRA         L_interrupt87
;robot_18F14k22_test.c,458 :: 		if (!RA1_bit){
0x0760	0xB280      	BTFSC       RA1_bit, BitPos(RA1_bit+0) 
0x0762	0xD011      	BRA         L_interrupt88
;robot_18F14k22_test.c,459 :: 		delay_ms(2);
0x0764	0x0E0B      	MOVLW       11
0x0766	0x6E0C      	MOVWF       R12, 0
0x0768	0x0E62      	MOVLW       98
0x076A	0x6E0D      	MOVWF       R13, 0
L_interrupt89:
0x076C	0x2E0D      	DECFSZ      R13, 1, 0
0x076E	0xD7FE      	BRA         L_interrupt89
0x0770	0x2E0C      	DECFSZ      R12, 1, 0
0x0772	0xD7FC      	BRA         L_interrupt89
0x0774	0x0000      	NOP
;robot_18F14k22_test.c,460 :: 		if (!RA1_bit){
0x0776	0xB280      	BTFSC       RA1_bit, BitPos(RA1_bit+0) 
0x0778	0xD006      	BRA         L_interrupt90
;robot_18F14k22_test.c,461 :: 		butee_in = 1;
0x077A	0x0E01      	MOVLW       1
0x077C	0x6E24      	MOVWF       _butee_in 
;robot_18F14k22_test.c,462 :: 		CCPR1 = 50;  // Rapport cyclique à 50% pour stopper le moteur et garder du couple
0x077E	0x0E32      	MOVLW       50
0x0780	0x6EBE      	MOVWF       CCPR1 
0x0782	0x0E00      	MOVLW       0
0x0784	0x6EBF      	MOVWF       CCPR1+1 
;robot_18F14k22_test.c,464 :: 		}
L_interrupt90:
;robot_18F14k22_test.c,465 :: 		}
L_interrupt88:
;robot_18F14k22_test.c,466 :: 		INTCON3.INT1IF = 0;
0x0786	0x90F0      	BCF         INTCON3, 0 
;robot_18F14k22_test.c,467 :: 		}
0x0788	0xD010      	BRA         L_interrupt91
L_interrupt87:
;robot_18F14k22_test.c,469 :: 		else if (TMR0IF_bit){
0x078A	0xA4F2      	BTFSS       TMR0IF_bit, BitPos(TMR0IF_bit+0) 
0x078C	0xD00E      	BRA         L_interrupt92
;robot_18F14k22_test.c,471 :: 		if(watchdog_restart>0)
0x078E	0x503F      	MOVF        _watchdog_restart, 0 
0x0790	0x0800      	SUBLW       0
0x0792	0xE202      	BC          L_interrupt93
;robot_18F14k22_test.c,472 :: 		watchdog_restart--;
0x0794	0x063F      	DECF        _watchdog_restart, 1 
0x0796	0xD004      	BRA         L_interrupt94
L_interrupt93:
;robot_18F14k22_test.c,474 :: 		position_set_point = 0;
0x0798	0x6A35      	CLRF        _position_set_point 
0x079A	0x6A36      	CLRF        _position_set_point+1 
;robot_18F14k22_test.c,475 :: 		watchdog_restart = watchdog_restart_default;
0x079C	0xF03FC03D  	MOVFF       _watchdog_restart_default, _watchdog_restart
;robot_18F14k22_test.c,476 :: 		}
L_interrupt94:
;robot_18F14k22_test.c,478 :: 		TMR0H = 0x0B;
0x07A0	0x0E0B      	MOVLW       11
0x07A2	0x6ED7      	MOVWF       TMR0H 
;robot_18F14k22_test.c,479 :: 		TMR0L = 0xDC;
0x07A4	0x0EDC      	MOVLW       220
0x07A6	0x6ED6      	MOVWF       TMR0L 
;robot_18F14k22_test.c,480 :: 		TMR0IF_bit = 0;
0x07A8	0x94F2      	BCF         TMR0IF_bit, BitPos(TMR0IF_bit+0) 
;robot_18F14k22_test.c,481 :: 		}
L_interrupt92:
L_interrupt91:
L_interrupt86:
;robot_18F14k22_test.c,482 :: 		}
L_end_interrupt:
L__interrupt159:
0x07AA	0xF000C023  	MOVFF       35, R0
0x07AE	0xF00CC022  	MOVFF       34, R12
0x07B2	0xF00DC021  	MOVFF       33, R13
0x07B6	0x0011      	RETFIE      1
; end of _interrupt
_main:
0x07B8	0xF004ECDC  	CALL        2488, 0
;robot_18F14k22_test.c,337 :: 		void main(){
;robot_18F14k22_test.c,339 :: 		OSCCON = 0b01110010;   // 0=4xPLL OFF, 111=IRCF<2:0>=16Mhz  OSTS=0  SCS<1:0>10 1x = Internal oscillator block
0x07BC	0x0E72      	MOVLW       114
0x07BE	0x6ED3      	MOVWF       OSCCON 
;robot_18F14k22_test.c,341 :: 		init_io(); // Initialisation des I/O
0x07C0	0xDF4D      	RCALL       _init_io
;robot_18F14k22_test.c,342 :: 		init_i2C(); // Initialisation de l'I2C en esclave
0x07C2	0xDF2C      	RCALL       _init_i2c
;robot_18F14k22_test.c,343 :: 		init_timer0(); // Initialisation du TIMER0 toutes les 1 secondes
0x07C4	0xDF43      	RCALL       _init_timer0
;robot_18F14k22_test.c,346 :: 		INTCON2.INTEDG0 = 0; // Interrupt on falling edge
0x07C6	0x9CF1      	BCF         INTCON2, 6 
;robot_18F14k22_test.c,347 :: 		INTCON.INT0IE = 1; //Enables the INT0 external interrupt
0x07C8	0x88F2      	BSF         INTCON, 4 
;robot_18F14k22_test.c,348 :: 		INTCON.INT0IF = 0; // INT0 External Interrupt Flag bit
0x07CA	0x92F2      	BCF         INTCON, 1 
;robot_18F14k22_test.c,351 :: 		INTCON2.INTEDG1 = 0; // Interrupt on falling edge
0x07CC	0x9AF1      	BCF         INTCON2, 5 
;robot_18F14k22_test.c,352 :: 		INTCON3.INT1IE = 1; //Enables the INT0 external interrupt
0x07CE	0x86F0      	BSF         INTCON3, 3 
;robot_18F14k22_test.c,353 :: 		INTCON3.INT1IF = 0; // INT0 External Interrupt Flag bit
0x07D0	0x90F0      	BCF         INTCON3, 0 
;robot_18F14k22_test.c,363 :: 		INTCON3.INT1IP = 1; //INT1 External Interrupt Priority bit, INT0 always a high
0x07D2	0x8CF0      	BSF         INTCON3, 6 
;robot_18F14k22_test.c,366 :: 		IPR1.SSPIP = 0; //Master Synchronous Serial Port Interrupt Priority bit, low priority
0x07D4	0x969F      	BCF         IPR1, 3 
;robot_18F14k22_test.c,367 :: 		RCON.IPEN = 1;  //Enable priority levels on interrupts
0x07D6	0x8ED0      	BSF         RCON, 7 
;robot_18F14k22_test.c,368 :: 		INTCON.GIEH = 1; //enable all high-priority interrupts
0x07D8	0x8EF2      	BSF         INTCON, 7 
;robot_18F14k22_test.c,369 :: 		INTCON.GIEL = 1; //enable all low-priority interrupts
0x07DA	0x8CF2      	BSF         INTCON, 6 
;robot_18F14k22_test.c,371 :: 		INTCON.GIE = 1; // Global Interrupt Enable bit
0x07DC	0x8EF2      	BSF         INTCON, 7 
;robot_18F14k22_test.c,372 :: 		INTCON.PEIE = 1; // Peripheral Interrupt Enable bit
0x07DE	0x8CF2      	BSF         INTCON, 6 
;robot_18F14k22_test.c,374 :: 		TMR0IE_bit = 1;  //Enable TIMER0
0x07E0	0x8AF2      	BSF         TMR0IE_bit, BitPos(TMR0IE_bit+0) 
;robot_18F14k22_test.c,375 :: 		TMR0ON_bit = 1; // Start TIMER1
0x07E2	0x8ED5      	BSF         TMR0ON_bit, BitPos(TMR0ON_bit+0) 
;robot_18F14k22_test.c,377 :: 		PWM1_Init(10000);  // Fréquence du PWM à 10Khz
0x07E4	0x80CA      	BSF         T2CON, 0, 0
0x07E6	0x92CA      	BCF         T2CON, 1, 0
0x07E8	0x0E63      	MOVLW       99
0x07EA	0x6ECB      	MOVWF       PR2, 0
0x07EC	0xDF91      	RCALL       _PWM1_Init
;robot_18F14k22_test.c,378 :: 		RC6_bit = 0;  //Disable L6203
0x07EE	0x9C82      	BCF         RC6_bit, BitPos(RC6_bit+0) 
;robot_18F14k22_test.c,379 :: 		CCPR1 = 50; // Rapport cyclique à 50%
0x07F0	0x0E32      	MOVLW       50
0x07F2	0x6EBE      	MOVWF       CCPR1 
0x07F4	0x0E00      	MOVLW       0
0x07F6	0x6EBF      	MOVWF       CCPR1+1 
;robot_18F14k22_test.c,380 :: 		motor_current_speed = 127;
0x07F8	0x0E7F      	MOVLW       127
0x07FA	0x6E3A      	MOVWF       _motor_current_speed 
;robot_18F14k22_test.c,381 :: 		PWM1_Start();
0x07FC	0xDF8D      	RCALL       _PWM1_Start
;robot_18F14k22_test.c,387 :: 		UART1_Init(115200);
0x07FE	0x86B8      	BSF         BAUDCON, 3, 0
0x0800	0x6AB0      	CLRF        SPBRGH 
0x0802	0x0E22      	MOVLW       34
0x0804	0x6EAF      	MOVWF       SPBRG 
0x0806	0x84AC      	BSF         TXSTA, 2, 0
0x0808	0xDF49      	RCALL       _UART1_Init
;robot_18F14k22_test.c,388 :: 		delay_ms(100);
0x080A	0x0E03      	MOVLW       3
0x080C	0x6E0B      	MOVWF       R11, 0
0x080E	0x0E08      	MOVLW       8
0x0810	0x6E0C      	MOVWF       R12, 0
0x0812	0x0E77      	MOVLW       119
0x0814	0x6E0D      	MOVWF       R13, 0
L_main68:
0x0816	0x2E0D      	DECFSZ      R13, 1, 0
0x0818	0xD7FE      	BRA         L_main68
0x081A	0x2E0C      	DECFSZ      R12, 1, 0
0x081C	0xD7FC      	BRA         L_main68
0x081E	0x2E0B      	DECFSZ      R11, 1, 0
0x0820	0xD7FA      	BRA         L_main68
;robot_18F14k22_test.c,390 :: 		while(1){
L_main69:
;robot_18F14k22_test.c,392 :: 		read_butee();
0x0822	0xDF67      	RCALL       _read_butee
;robot_18F14k22_test.c,395 :: 		switch (state){
0x0824	0xD043      	BRA         L_main71
;robot_18F14k22_test.c,396 :: 		case RESET_OUT:
L_main73:
;robot_18F14k22_test.c,398 :: 		LED2 = 1;
0x0826	0x8482      	BSF         RC2_bit, BitPos(RC2_bit+0) 
;robot_18F14k22_test.c,400 :: 		if (butee_out == 1){ // Sortie complète
0x0828	0x5025      	MOVF        _butee_out, 0 
0x082A	0x0A01      	XORLW       1
0x082C	0xE112      	BNZ         L_main74
;robot_18F14k22_test.c,401 :: 		state = REGULATION;
0x082E	0x0E01      	MOVLW       1
0x0830	0x6E33      	MOVWF       _state 
;robot_18F14k22_test.c,402 :: 		optical_state = SB<<1 | SA;  //  ou logique de RA3 et RA2, lecture du capteur pour initialiser la machine d'état
0x0832	0x0E00      	MOVLW       0
0x0834	0xB880      	BTFSC       RA4_bit, BitPos(RA4_bit+0) 
0x0836	0x0E01      	MOVLW       1
0x0838	0x6E40      	MOVWF       _optical_state 
0x083A	0x3640      	RLCF        _optical_state, 1 
0x083C	0x9040      	BCF         _optical_state, 0 
0x083E	0x6A00      	CLRF        R0 
0x0840	0xB480      	BTFSC       RA2_bit, BitPos(RA2_bit+0) 
0x0842	0x2A00      	INCF        R0, 1 
0x0844	0x5000      	MOVF        R0, 0 
0x0846	0x1240      	IORWF       _optical_state, 1 
;robot_18F14k22_test.c,403 :: 		nb_pulse = 0; // Reset Nb pulse (The reset is also done in the interrupt function)
0x0848	0x6A37      	CLRF        _nb_pulse 
0x084A	0x6A38      	CLRF        _nb_pulse+1 
;robot_18F14k22_test.c,404 :: 		position_set_point = 0;
0x084C	0x6A35      	CLRF        _position_set_point 
0x084E	0x6A36      	CLRF        _position_set_point+1 
;robot_18F14k22_test.c,405 :: 		}
0x0850	0xD003      	BRA         L_main75
L_main74:
;robot_18F14k22_test.c,407 :: 		set_motor_cmd_out(motor_speed_out);
0x0852	0xF059C028  	MOVFF       _motor_speed_out, FARG_set_motor_cmd_out_speed
0x0856	0xDCEF      	RCALL       _set_motor_cmd_out
L_main75:
;robot_18F14k22_test.c,409 :: 		break;
0x0858	0xD030      	BRA         L_main72
;robot_18F14k22_test.c,411 :: 		case REGULATION:
L_main76:
;robot_18F14k22_test.c,413 :: 		read_optical_fork();
0x085A	0xDC81      	RCALL       _read_optical_fork
;robot_18F14k22_test.c,414 :: 		LED2 = 0;
0x085C	0x9482      	BCF         RC2_bit, BitPos(RC2_bit+0) 
;robot_18F14k22_test.c,417 :: 		error = position_set_point - nb_pulse;
0x085E	0x5037      	MOVF        _nb_pulse, 0 
0x0860	0x5C35      	SUBWF       _position_set_point, 0 
0x0862	0x6E01      	MOVWF       R1 
0x0864	0x5038      	MOVF        _nb_pulse+1, 0 
0x0866	0x5836      	SUBWFB      _position_set_point+1, 0 
0x0868	0x6E02      	MOVWF       R2 
0x086A	0xF029C001  	MOVFF       R1, _error
0x086E	0xF02AC002  	MOVFF       R2, _error+1
;robot_18F14k22_test.c,419 :: 		if(error > error_interval)
0x0872	0x0E80      	MOVLW       128
0x0874	0x6E00      	MOVWF       R0 
0x0876	0x0E80      	MOVLW       128
0x0878	0x1802      	XORWF       R2, 0 
0x087A	0x5C00      	SUBWF       R0, 0 
0x087C	0xE102      	BNZ         L__main156
0x087E	0x5001      	MOVF        R1, 0 
0x0880	0x5C26      	SUBWF       _error_interval, 0 
L__main156:
0x0882	0xE204      	BC          L_main77
;robot_18F14k22_test.c,420 :: 		set_motor_cmd_in(motor_speed_in);
0x0884	0xF059C027  	MOVFF       _motor_speed_in, FARG_set_motor_cmd_in_speed
0x0888	0xDCDB      	RCALL       _set_motor_cmd_in
0x088A	0xD00E      	BRA         L_main78
L_main77:
;robot_18F14k22_test.c,421 :: 		else if(error < error_interval)
0x088C	0x0E80      	MOVLW       128
0x088E	0x182A      	XORWF       _error+1, 0 
0x0890	0x6E00      	MOVWF       R0 
0x0892	0x0E80      	MOVLW       128
0x0894	0x5C00      	SUBWF       R0, 0 
0x0896	0xE102      	BNZ         L__main157
0x0898	0x5026      	MOVF        _error_interval, 0 
0x089A	0x5C29      	SUBWF       _error, 0 
L__main157:
0x089C	0xE204      	BC          L_main79
;robot_18F14k22_test.c,422 :: 		set_motor_cmd_out(motor_speed_out);
0x089E	0xF059C028  	MOVFF       _motor_speed_out, FARG_set_motor_cmd_out_speed
0x08A2	0xDCC9      	RCALL       _set_motor_cmd_out
0x08A4	0xD001      	BRA         L_main80
L_main79:
;robot_18F14k22_test.c,424 :: 		set_motor_cmd_stop();
0x08A6	0xDC18      	RCALL       _set_motor_cmd_stop
L_main80:
L_main78:
;robot_18F14k22_test.c,426 :: 		break;
0x08A8	0xD008      	BRA         L_main72
;robot_18F14k22_test.c,427 :: 		default:
L_main81:
;robot_18F14k22_test.c,428 :: 		break;
0x08AA	0xD007      	BRA         L_main72
;robot_18F14k22_test.c,429 :: 		}
L_main71:
0x08AC	0x5033      	MOVF        _state, 0 
0x08AE	0x0A00      	XORLW       0
0x08B0	0xE0BA      	BZ          L_main73
0x08B2	0x5033      	MOVF        _state, 0 
0x08B4	0x0A01      	XORLW       1
0x08B6	0xE0D1      	BZ          L_main76
0x08B8	0xD7F8      	BRA         L_main81
L_main72:
;robot_18F14k22_test.c,430 :: 		}
0x08BA	0xD7B3      	BRA         L_main69
;robot_18F14k22_test.c,431 :: 		}
L_end_main:
0x08BC	0xD7FF      	BRA         $+0
; end of _main
_interrupt_low:
0x08BE	0xF020C000  	MOVFF       R0, 32
0x08C2	0xF01FC001  	MOVFF       R1, 31
0x08C6	0xF01EC002  	MOVFF       R2, 30
0x08CA	0xF01DC003  	MOVFF       R3, 29
0x08CE	0xF01CC004  	MOVFF       R4, 28
0x08D2	0xF01BC005  	MOVFF       R5, 27
0x08D6	0xF01AC008  	MOVFF       R8, 26
0x08DA	0xF019C009  	MOVFF       R9, 25
0x08DE	0xF018C00D  	MOVFF       R13, 24
0x08E2	0x6E15      	MOVWF       ___Low_saveWREG 
0x08E4	0xF016CFD8  	MOVFF       STATUS, ___Low_saveSTATUS
0x08E8	0xF017CFE0  	MOVFF       BSR, ___Low_saveBSR
;robot_18F14k22_test.c,532 :: 		void interrupt_low(){
;robot_18F14k22_test.c,533 :: 		if (PIR1.SSPIF){  // I2C Interrupt
0x08EC	0xA69E      	BTFSS       PIR1, 3 
0x08EE	0xD03D      	BRA         L_interrupt_low95
;robot_18F14k22_test.c,535 :: 		if(SSPCON1.SSPOV || SSPCON1.WCOL){
0x08F0	0xBCC6      	BTFSC       SSPCON1, 6 
0x08F2	0xD003      	BRA         L__interrupt_low113
0x08F4	0xBEC6      	BTFSC       SSPCON1, 7 
0x08F6	0xD001      	BRA         L__interrupt_low113
0x08F8	0xD004      	BRA         L_interrupt_low98
L__interrupt_low113:
;robot_18F14k22_test.c,536 :: 		SSPCON1.SSPOV = 0;
0x08FA	0x9CC6      	BCF         SSPCON1, 6 
;robot_18F14k22_test.c,537 :: 		SSPCON1.WCOL = 0;
0x08FC	0x9EC6      	BCF         SSPCON1, 7 
;robot_18F14k22_test.c,538 :: 		tmp_rx = SSPBUF;
0x08FE	0xF03BCFC9  	MOVFF       SSPBUF, _tmp_rx
;robot_18F14k22_test.c,539 :: 		}
L_interrupt_low98:
;robot_18F14k22_test.c,543 :: 		if (SSPSTAT.R_W == 0){
0x0902	0xB4C7      	BTFSC       SSPSTAT, 2 
0x0904	0xD027      	BRA         L_interrupt_low99
;robot_18F14k22_test.c,544 :: 		if(SSPSTAT.P == 0){
0x0906	0xB8C7      	BTFSC       SSPSTAT, 4 
0x0908	0xD017      	BRA         L_interrupt_low100
;robot_18F14k22_test.c,545 :: 		if (SSPSTAT.D_A == 0){ // Address
0x090A	0xBAC7      	BTFSC       SSPSTAT, 5 
0x090C	0xD004      	BRA         L_interrupt_low101
;robot_18F14k22_test.c,546 :: 		nb_rx_octet = 0;
0x090E	0x6A3E      	CLRF        _nb_rx_octet 
;robot_18F14k22_test.c,547 :: 		tmp_rx = SSPBUF;
0x0910	0xF03BCFC9  	MOVFF       SSPBUF, _tmp_rx
;robot_18F14k22_test.c,548 :: 		}
0x0914	0xD011      	BRA         L_interrupt_low102
L_interrupt_low101:
;robot_18F14k22_test.c,550 :: 		if(nb_rx_octet < SIZE_RX_BUFFER){
0x0916	0x0E08      	MOVLW       8
0x0918	0x5C3E      	SUBWF       _nb_rx_octet, 0 
0x091A	0xE20C      	BC          L_interrupt_low103
;robot_18F14k22_test.c,551 :: 		rxbuffer_tab[nb_rx_octet] = SSPBUF;
0x091C	0x0E45      	MOVLW       _rxbuffer_tab
0x091E	0x6EE1      	MOVWF       FSR1L 
0x0920	0x0E00      	MOVLW       hi_addr(_rxbuffer_tab)
0x0922	0x6EE2      	MOVWF       FSR1H 
0x0924	0x503E      	MOVF        _nb_rx_octet, 0 
0x0926	0x26E1      	ADDWF       FSR1L, 1 
0x0928	0xB0D8      	BTFSC       STATUS, 0 
0x092A	0x2AE2      	INCF        FSR1H, 1 
0x092C	0xFFE6CFC9  	MOVFF       SSPBUF, POSTINC1
;robot_18F14k22_test.c,552 :: 		nb_rx_octet++;
0x0930	0x2A3E      	INCF        _nb_rx_octet, 1 
;robot_18F14k22_test.c,553 :: 		}
0x0932	0xD002      	BRA         L_interrupt_low104
L_interrupt_low103:
;robot_18F14k22_test.c,555 :: 		tmp_rx = SSPBUF;
0x0934	0xF03BCFC9  	MOVFF       SSPBUF, _tmp_rx
;robot_18F14k22_test.c,556 :: 		}
L_interrupt_low104:
;robot_18F14k22_test.c,557 :: 		}
L_interrupt_low102:
;robot_18F14k22_test.c,558 :: 		}
L_interrupt_low100:
;robot_18F14k22_test.c,560 :: 		if(nb_rx_octet>1){
0x0938	0x503E      	MOVF        _nb_rx_octet, 0 
0x093A	0x0801      	SUBLW       1
0x093C	0xE20A      	BC          L_interrupt_low105
;robot_18F14k22_test.c,561 :: 		Delay_us(30); // Wait P signal ?
0x093E	0x0E27      	MOVLW       39
0x0940	0x6E0D      	MOVWF       R13, 0
L_interrupt_low106:
0x0942	0x2E0D      	DECFSZ      R13, 1, 0
0x0944	0xD7FE      	BRA         L_interrupt_low106
0x0946	0x0000      	NOP
0x0948	0x0000      	NOP
;robot_18F14k22_test.c,562 :: 		if(SSPSTAT.P == 1){
0x094A	0xA8C7      	BTFSS       SSPSTAT, 4 
0x094C	0xD002      	BRA         L_interrupt_low107
;robot_18F14k22_test.c,563 :: 		i2c_read_data_from_buffer();
0x094E	0xDD2E      	RCALL       _i2c_read_data_from_buffer
;robot_18F14k22_test.c,564 :: 		nb_rx_octet = 0;
0x0950	0x6A3E      	CLRF        _nb_rx_octet 
;robot_18F14k22_test.c,565 :: 		}
L_interrupt_low107:
;robot_18F14k22_test.c,566 :: 		}
L_interrupt_low105:
;robot_18F14k22_test.c,567 :: 		}
0x0952	0xD009      	BRA         L_interrupt_low108
L_interrupt_low99:
;robot_18F14k22_test.c,571 :: 		if(SSPSTAT.D_A == 0){
0x0954	0xBAC7      	BTFSC       SSPSTAT, 5 
0x0956	0xD003      	BRA         L_interrupt_low109
;robot_18F14k22_test.c,572 :: 		nb_tx_octet = 0;
0x0958	0x6A3C      	CLRF        _nb_tx_octet 
;robot_18F14k22_test.c,573 :: 		tmp_rx = SSPBUF;
0x095A	0xF03BCFC9  	MOVFF       SSPBUF, _tmp_rx
;robot_18F14k22_test.c,574 :: 		}
L_interrupt_low109:
;robot_18F14k22_test.c,577 :: 		i2c_write_data_to_buffer(nb_tx_octet);
0x095E	0xF05FC03C  	MOVFF       _nb_tx_octet, FARG_i2c_write_data_to_buffer_nb_tx_octet
0x0962	0xDC73      	RCALL       _i2c_write_data_to_buffer
;robot_18F14k22_test.c,578 :: 		nb_tx_octet++;
0x0964	0x2A3C      	INCF        _nb_tx_octet, 1 
;robot_18F14k22_test.c,579 :: 		}
L_interrupt_low108:
;robot_18F14k22_test.c,581 :: 		SSPCON1.CKP = 1;
0x0966	0x88C6      	BSF         SSPCON1, 4 
;robot_18F14k22_test.c,582 :: 		PIR1.SSPIF = 0; // reset SSP interrupt flag
0x0968	0x969E      	BCF         PIR1, 3 
;robot_18F14k22_test.c,583 :: 		}
L_interrupt_low95:
;robot_18F14k22_test.c,584 :: 		}
L_end_interrupt_low:
L__interrupt_low162:
0x096A	0x5017      	MOVF        ___Low_saveBSR, 0 
0x096C	0x6EE0      	MOVWF       BSR 
0x096E	0x5016      	MOVF        ___Low_saveSTATUS, 0 
0x0970	0x6ED8      	MOVWF       STATUS 
0x0972	0x3A15      	SWAPF       ___Low_saveWREG, 1 
0x0974	0x3815      	SWAPF       ___Low_saveWREG, 0 
0x0976	0xF000C020  	MOVFF       32, R0
0x097A	0xF001C01F  	MOVFF       31, R1
0x097E	0xF002C01E  	MOVFF       30, R2
0x0982	0xF003C01D  	MOVFF       29, R3
0x0986	0xF004C01C  	MOVFF       28, R4
0x098A	0xF005C01B  	MOVFF       27, R5
0x098E	0xF008C01A  	MOVFF       26, R8
0x0992	0xF009C019  	MOVFF       25, R9
0x0996	0xF00DC018  	MOVFF       24, R13
0x099A	0x0010      	RETFIE      0
; end of _interrupt_low
0x09B8	0xF024EE10  	LFSR        1, 36
0x09BC	0x0E1C      	MOVLW       28
0x09BE	0x6E00      	MOVWF       R0 
0x09C0	0x0E01      	MOVLW       1
0x09C2	0x6E01      	MOVWF       R1 
0x09C4	0x0E9C      	MOVLW       156
0x09C6	0x6EF6      	MOVWF       4086 
0x09C8	0x0E09      	MOVLW       9
0x09CA	0x6EF7      	MOVWF       TBLPTRH 
0x09CC	0x0E00      	MOVLW       0
0x09CE	0x6EF8      	MOVWF       TBLPTRU 
0x09D0	0xF003EC46  	CALL        1676, 0
0x09D4	0x0012      	RETURN      0
;robot_18F14k22_test.c,0 :: ?ICS_butee_in
0x099C	0x00 ;?ICS_butee_in+0
; end of ?ICS_butee_in
;robot_18F14k22_test.c,0 :: ?ICS_butee_out
0x099D	0x00 ;?ICS_butee_out+0
; end of ?ICS_butee_out
;robot_18F14k22_test.c,0 :: ?ICS_error_interval
0x099E	0x03 ;?ICS_error_interval+0
; end of ?ICS_error_interval
;robot_18F14k22_test.c,0 :: ?ICS_motor_speed_in
0x099F	0x32 ;?ICS_motor_speed_in+0
; end of ?ICS_motor_speed_in
;robot_18F14k22_test.c,0 :: ?ICS_motor_speed_out
0x09A0	0x32 ;?ICS_motor_speed_out+0
; end of ?ICS_motor_speed_out
;robot_18F14k22_test.c,0 :: ?ICS_error
0x09A1	0x0000 ;?ICS_error+0
; end of ?ICS_error
;robot_18F14k22_test.c,0 :: ?ICS_position_reached_max_value
0x09A3	0xC350 ;?ICS_position_reached_max_value+0
0x09A5	0x0000 ;?ICS_position_reached_max_value+2
; end of ?ICS_position_reached_max_value
;robot_18F14k22_test.c,0 :: ?ICS_position_reached_cpt
0x09A7	0x0000 ;?ICS_position_reached_cpt+0
0x09A9	0x0000 ;?ICS_position_reached_cpt+2
; end of ?ICS_position_reached_cpt
;robot_18F14k22_test.c,0 :: ?ICS_state
0x09AB	0x00 ;?ICS_state+0
; end of ?ICS_state
;robot_18F14k22_test.c,0 :: ?ICS_position_reached_enable
0x09AC	0x01 ;?ICS_position_reached_enable+0
; end of ?ICS_position_reached_enable
;robot_18F14k22_test.c,0 :: ?ICS_position_set_point
0x09AD	0x0000 ;?ICS_position_set_point+0
; end of ?ICS_position_set_point
;robot_18F14k22_test.c,0 :: ?ICS_nb_pulse
0x09AF	0x0000 ;?ICS_nb_pulse+0
; end of ?ICS_nb_pulse
;robot_18F14k22_test.c,0 :: ?ICS_motor_on
0x09B1	0x01 ;?ICS_motor_on+0
; end of ?ICS_motor_on
;robot_18F14k22_test.c,0 :: ?ICS_motor_current_speed
0x09B2	0x7F ;?ICS_motor_current_speed+0
; end of ?ICS_motor_current_speed
;robot_18F14k22_test.c,0 :: ?ICS_tmp_rx
0x09B3	0x00 ;?ICS_tmp_rx+0
; end of ?ICS_tmp_rx
;robot_18F14k22_test.c,0 :: ?ICS_nb_tx_octet
0x09B4	0x00 ;?ICS_nb_tx_octet+0
; end of ?ICS_nb_tx_octet
;robot_18F14k22_test.c,0 :: ?ICS_watchdog_restart_default
0x09B5	0x3C ;?ICS_watchdog_restart_default+0
; end of ?ICS_watchdog_restart_default
;robot_18F14k22_test.c,0 :: ?ICS_nb_rx_octet
0x09B6	0x00 ;?ICS_nb_rx_octet+0
; end of ?ICS_nb_rx_octet
;robot_18F14k22_test.c,0 :: ?ICS_watchdog_restart
0x09B7	0x3C ;?ICS_watchdog_restart+0
; end of ?ICS_watchdog_restart
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [80]    _Mul_16X16_U
0x006C     [108]    _PWM1_Set_Duty
0x00D8      [20]    _set_motor_cmd_stop
0x00EC     [114]    _set_motor_cmd
0x015E     [216]    _read_optical_fork
0x0236      [10]    _set_motor_cmd_out
0x0240      [10]    _set_motor_cmd_in
0x024A     [354]    _i2c_write_data_to_buffer
0x03AC     [624]    _i2c_read_data_from_buffer
0x061C      [48]    _init_i2c
0x064C      [16]    _init_timer0
0x065C      [48]    _init_io
0x068C      [16]    ___CC2DW
0x069C      [86]    _UART1_Init
0x06F2      [30]    _read_butee
0x0710       [8]    _PWM1_Init
0x0718      [10]    _PWM1_Start
0x0722     [150]    _interrupt
0x07B8     [262]    _main
0x08BE     [222]    _interrupt_low
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    R1
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    memchr_s_L0
0x0003       [1]    R3
0x0003       [2]    memmove_tt_L0
0x0003       [2]    Ltrim_original_L0
0x0004       [1]    read_optical_fork_new_state_L0
0x0004       [1]    R4
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcat_cp_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    R5
0x0005       [2]    Ltrim_p_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x0009       [1]    i2c_read_data_from_buffer_nb_data_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    ___Low_saveWREG
0x0016       [1]    ___Low_saveSTATUS
0x0017       [1]    ___Low_saveBSR
0x0024       [1]    _butee_in
0x0025       [1]    _butee_out
0x0026       [1]    _error_interval
0x0027       [1]    _motor_speed_in
0x0028       [1]    _motor_speed_out
0x0029       [2]    _error
0x002B       [4]    _position_reached_max_value
0x002F       [4]    _position_reached_cpt
0x0033       [1]    _state
0x0034       [1]    _position_reached_enable
0x0035       [2]    _position_set_point
0x0037       [2]    _nb_pulse
0x0039       [1]    _motor_on
0x003A       [1]    _motor_current_speed
0x003B       [1]    _tmp_rx
0x003C       [1]    _nb_tx_octet
0x003D       [1]    _watchdog_restart_default
0x003E       [1]    _nb_rx_octet
0x003F       [1]    _watchdog_restart
0x0040       [1]    _optical_state
0x0041       [4]    _UART_Tx_Idle_Ptr
0x0045       [8]    _rxbuffer_tab
0x004D       [4]    _UART_Rdy_Ptr
0x0051       [4]    _UART_Wr_Ptr
0x0055       [4]    _UART_Rd_Ptr
0x0059       [1]    FARG_set_motor_cmd_out_speed
0x0059       [1]    FARG_set_motor_cmd_in_speed
0x0059       [4]    FARG_PWM1_Init_PWM_Freq
0x005D       [1]    FARG_set_motor_cmd_speed
0x005E       [1]    FARG_PWM1_Set_Duty_new_duty
0x005F       [1]    FARG_i2c_write_data_to_buffer_nb_tx_octet
0x005F       [1]    i2c_read_data_from_buffer_i_L0
0x0F6B       [1]    CM2CON0
0x0F6D       [1]    CM1CON0
0x0F6F       [1]    SSPMSK
0x0F77       [1]    WPUA
0x0F7E       [1]    ANSEL
0x0F7F       [1]    ANSELH
0x0F80       [0]    SA
0x0F80       [0]    SB
0x0F80       [0]    RA2_bit
0x0F80       [0]    RA0_bit
0x0F80       [0]    RA1_bit
0x0F80       [0]    RA4_bit
0x0F82       [0]    RC6_bit
0x0F82       [0]    LED1
0x0F82       [0]    RC2_bit
0x0F82       [0]    LED2
0x0F82       [0]    RC0_bit
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA0_bit
0x0F92       [0]    TRISA5_bit
0x0F92       [0]    TRISA4_bit
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    TRISB4_bit
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC2_bit
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC0_bit
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    TRISC7_bit
0x0F9D       [1]    PIE1
0x0F9E       [1]    PIR1
0x0F9F       [1]    IPR1
0x0FA1       [1]    PIR2
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FBD       [1]    CCP1CON
0x0FBE       [1]    CCPR1L
0x0FBE       [2]    CCPR1
0x0FC5       [1]    SSPCON2
0x0FC6       [1]    SSPCON1
0x0FC7       [1]    SSPSTAT
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FCA       [1]    T2CON
0x0FCB       [1]    PR2
0x0FD0       [1]    RCON
0x0FD3       [1]    OSCCON
0x0FD5       [1]    T0CON
0x0FD5       [0]    TMR0ON_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x099C       [1]    ?ICS_butee_in
0x099D       [1]    ?ICS_butee_out
0x099E       [1]    ?ICS_error_interval
0x099F       [1]    ?ICS_motor_speed_in
0x09A0       [1]    ?ICS_motor_speed_out
0x09A1       [2]    ?ICS_error
0x09A3       [4]    ?ICS_position_reached_max_value
0x09A7       [4]    ?ICS_position_reached_cpt
0x09AB       [1]    ?ICS_state
0x09AC       [1]    ?ICS_position_reached_enable
0x09AD       [2]    ?ICS_position_set_point
0x09AF       [2]    ?ICS_nb_pulse
0x09B1       [1]    ?ICS_motor_on
0x09B2       [1]    ?ICS_motor_current_speed
0x09B3       [1]    ?ICS_tmp_rx
0x09B4       [1]    ?ICS_nb_tx_octet
0x09B5       [1]    ?ICS_watchdog_restart_default
0x09B6       [1]    ?ICS_nb_rx_octet
0x09B7       [1]    ?ICS_watchdog_restart
